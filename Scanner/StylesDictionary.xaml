<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:v1803="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:v1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:belowv1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:controlsxaml="using:Microsoft.UI.Xaml.Controls"
    xmlns:local="using:Scanner">

    <Style x:Key="FlipViewStyleNoButtons" TargetType="FlipView">
        <Setter Property="Background" Value="{ThemeResource FlipViewBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
        <Setter Property="ScrollViewer.IsHorizontalScrollChainingEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsVerticalScrollChainingEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel AreScrollSnapPointsRegular="True" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="FlipView">
                    <Grid Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}">
                        <v1809:Grid.BackgroundTransition>
                            <v1803:BrushTransition/>
                        </v1809:Grid.BackgroundTransition>
                        <Grid.Resources>
                            <ControlTemplate x:Key="HorizontalNextTemplate" TargetType="Button">
                                <Border x:Name="Root" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E3;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E2;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalNextTemplate" TargetType="Button">
                                <Border x:Name="Root" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E5;" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E4;" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Grid.Resources>
                        <ScrollViewer x:Name="ScrollingHost" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalSnapPointsType="MandatorySingle" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalSnapPointsType="MandatorySingle" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <Button x:Name="PreviousButtonHorizontal" HorizontalAlignment="Left" Height="0" IsTabStop="False" Template="{StaticResource HorizontalPreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Center" Width="0"/>
                        <Button x:Name="NextButtonHorizontal" HorizontalAlignment="Right" Height="0" IsTabStop="False" Template="{StaticResource HorizontalNextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Center" Width="0"/>
                        <Button x:Name="PreviousButtonVertical" HorizontalAlignment="Center" Height="20" IsTabStop="False" Template="{StaticResource VerticalPreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="36"/>
                        <Button x:Name="NextButtonVertical" HorizontalAlignment="Center" Height="20" IsTabStop="False" Template="{StaticResource VerticalNextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Bottom" Width="36"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="ButtonAccentRevealStyle1803">
        <Setter Property="Background" Value="{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ButtonRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonRevealBorderThemeThickness}" />
        <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">

                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlHighlightAccent2RevealBackgroundBrush}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonAccentRevealBackgroundBrushPressed}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <v1809:Style TargetType="Button" x:Key="ButtonAccentRevealStyle1809">
        <Setter Property="Background" Value="{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource ButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ButtonRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonRevealBorderThemeThickness}" />
        <Setter Property="Padding" Value="{ThemeResource ButtonPadding}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}" CornerRadius="{TemplateBinding CornerRadius}">

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">

                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.(RevealBrush.State)" Value="PointerOver" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource SystemControlHighlightAccent2RevealBackgroundBrush}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPointerOver}" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.(RevealBrush.State)" Value="Pressed" />
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonAccentRevealBackgroundBrushPressed}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundPressed}" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootGrid.Background" Value="{ThemeResource ButtonRevealBackgroundDisabled}" />
                                        <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushDisabled}" />
                                        <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource ButtonForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="ContentPresenter" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Content="{TemplateBinding Content}" ContentTransitions="{TemplateBinding ContentTransitions}" ContentTemplate="{TemplateBinding ContentTemplate}" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" AutomationProperties.AccessibilityView="Raw" />

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </v1809:Style>

    <Style x:Key="BaseTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="XamlAutoFontFamily"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextTrimming" Value="None"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="LineStackingStrategy" Value="MaxHeight"/>
        <Setter Property="TextLineBounds" Value="Full"/>
    </Style>
        
    <Style x:Key="SplitButtonAccentRevealStyle" TargetType="controlsxaml:SplitButton">
        <Setter Property="Background" Value="{ThemeResource SystemControlHighlightAccentRevealBackgroundBrush}" />
        <Setter Property="Foreground" Value="{ThemeResource SystemColorHighlightTextColor}" />
        <Setter Property="BorderBrush" Value="{ThemeResource ButtonRevealBorderBrush}" />
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonRevealBorderThemeThickness}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Padding" Value="{ThemeResource ButtonPadding}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controlsxaml:SplitButton">
                    <Grid
                        x:Name="RootGrid"
                        Background="Transparent"
                        v1809:CornerRadius="{TemplateBinding CornerRadius}"
                        belowv1809:CornerRadius="{ThemeResource ControlCornerRadius}">

                        <Grid.Resources>
                            <!-- Override the style of the inner buttons so that they don't affect background/foreground/border colors -->
                            <Style TargetType="Button">
                                <Setter Property="Foreground" Value="{ThemeResource SplitButtonForeground}" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                <Setter Property="FocusVisualMargin" Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="RootGrid" Background="Transparent">

                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>

                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundDisabled}"/>
                                                                <Setter Target="ContentPresenter.BorderBrush" Value="{ThemeResource DisabledButtonBackgroundThemedStyle}"/>
                                                                <Setter Target="ContentPresenter.Background" Value="{ThemeResource DisabledButtonBackgroundThemedStyle}" />
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <ContentPresenter x:Name="ContentPresenter"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Padding="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    AutomationProperties.AccessibilityView="Raw" />
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="FlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SystemControlHighlightAccent2RevealBackgroundBrush}"/>
                                        <Setter Target="PrimaryButton.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource ButtonAccentRevealBackgroundBrushPressed}"/>
                                        <Setter Target="PrimaryButton.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SystemControlHighlightAccent2RevealBackgroundBrush}"/>
                                        <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource ButtonAccentRevealBackgroundBrushPressed}"/>
                                        <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushPressed}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedFlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedTouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}"/>
                                        <Setter Target="PrimaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}"/>
                                        <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                <VisualState x:Name="SecondaryButtonRight"/>

                                <VisualState x:Name="SecondaryButtonSpan">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryButton.(Grid.Column)" Value="0"/>
                                        <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="PrimaryButtonColumn" Width="*" MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}"/>
                            <ColumnDefinition x:Name="Separator" Width="1" />
                            <ColumnDefinition x:Name="SecondaryButtonColumn" Width="{ThemeResource SplitButtonSecondaryButtonSize}"/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="PrimaryBackgroundGrid"
                            Background="{TemplateBinding Background}"/>

                        <Grid x:Name="SecondaryBackgroundGrid"
                            Background="{TemplateBinding Background}"
                            Grid.Column="2"/>

                        <Grid x:Name="Border"
                            Grid.ColumnSpan="3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            v1809:CornerRadius="{TemplateBinding CornerRadius}"/>

                        <Button x:Name="PrimaryButton"
                            Grid.Column="0"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="Transparent"
                            Content="{TemplateBinding Content}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw"/>

                        <Button x:Name="SecondaryButton"
                            Grid.Column="2"
                            Foreground="{TemplateBinding Foreground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="Transparent"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Padding="0,0,9,0"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw">
                            <Button.Content>
                                <TextBlock
                                    FontFamily="Segoe MDL2 Assets"
                                    FontSize="12"
                                    Text="&#xE70D;"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Right"
                                    IsTextScaleFactorEnabled="False"
                                    AutomationProperties.AccessibilityView="Raw"/>
                            </Button.Content>
                        </Button>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilledTeachingTipStyle" TargetType="controlsxaml:TeachingTip">
        <Setter Property="Background" Value="{ThemeResource TeachingTipBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource TeachingTipForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TeachingTipBorderBrush}"/>
        <Setter Property="ActionButtonStyle" Value="{ThemeResource DefaultButtonStyle}"/>
        <Setter Property="CloseButtonStyle" Value="{ThemeResource DefaultButtonStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controlsxaml:TeachingTip">
                    <Border x:Name="Container"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="LightDismissStates">
                                <VisualState x:Name="LightDismiss">
                                    <VisualState.Setters>
                                        <Setter Target="TailEdgeBorder.Background" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                        <Setter Target="TailPolygon.Fill" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                        <Setter Target="TopTailPolygonHighlight.Fill" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                        <Setter Target="ContentRootGrid.Background" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalDismiss"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonsStates">
                                <VisualState x:Name="NoButtonsVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Collapsed"/>

                                        <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ActionButtonVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Collapsed"/>

                                        <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                        <Setter Target="ActionButton.(Grid.Column)" Value="1"/>
                                        <Setter Target="ActionButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CloseButtonVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Visible"/>
                                        <Setter Target="CloseButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>

                                        <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BothButtonsVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Visible"/>
                                        <Setter Target="CloseButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>

                                        <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                        <Setter Target="ActionButton.(Grid.Column)" Value="0"/>
                                        <Setter Target="ActionButton.Margin" Value="{StaticResource TeachingTipLeftButtonMargin}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContentStates">
                                <VisualState x:Name="Content">
                                    <VisualState.Setters>
                                        <Setter Target="MainContentPresenter.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoContent">
                                    <VisualState.Setters>
                                        <Setter Target="MainContentPresenter.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CloseButtonLocations">
                                <VisualState x:Name="HeaderCloseButton">
                                    <VisualState.Setters>
                                        <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithHeaderCloseButton}"/>
                                        <Setter Target="AlternateCloseButton.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FooterCloseButton">
                                    <VisualState.Setters>
                                        <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithFooterCloseButton}"/>
                                        <Setter Target="AlternateCloseButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="Icon">
                                    <VisualState.Setters>
                                        <Setter Target="IconBorder.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithIcon}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoIcon">
                                    <VisualState.Setters>
                                        <Setter Target="IconBorder.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithoutIcon}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeroContentPlacementStates">
                                <VisualState x:Name="HeroContentTop">
                                    <VisualState.Setters>
                                        <Setter Target="HeroContentBorder.(Grid.Row)" Value="0"/>
                                        <v1809:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}"/>
                                        <v1803:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HeroContentBottom">
                                    <VisualState.Setters>
                                        <Setter Target="HeroContentBorder.(Grid.Row)" Value="2"/>
                                        <v1809:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"/>
                                        <v1803:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PlacementStates">
                                <VisualState x:Name="Top">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>

                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>

                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Left">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Right">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TopRight">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TopLeft">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BottomRight">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BottomLeft">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftTop">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftBottom">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightTop">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightBottom">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Center">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Untargeted">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessUntargeted}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid MinHeight="{ThemeResource TeachingTipMinHeight}" 
                              MinWidth="{ThemeResource TeachingTipMinWidth}"
                              MaxWidth="{ThemeResource TeachingTipMaxWidth}"
                              AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                            </Grid.RowDefinitions>
                            <!-- This TailEdgeBorder needs to be z ordered underneath the TailPolygon while the TailOcclusionGrid needs to be over it, hence declaring these parts
                                 in this order. This is to achieve the desired occlusion of the tail's content edge border. The tail edge border is a low opacity highlight,
                                 which means we need to have the background color present underneath the highlight, hence the double grid here. -->
                            <Grid x:Name="TailEdgeBorder" Background="{TemplateBinding Background}">
                                <Grid Background="{TemplateBinding BorderBrush}"/>
                            </Grid>
                            <Polygon x:Name="TailPolygon"
                                     Fill="{TemplateBinding Background}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{StaticResource TeachingTipBorderThickness}"/>
                            <Grid x:Name="TailOcclusionGrid" 
                                  HorizontalAlignment="Left" 
                                  VerticalAlignment="Top" 
                                  MinHeight="{ThemeResource TeachingTipMinHeight}" 
                                  MinWidth="{ThemeResource TeachingTipMinWidth}"
                                  MaxHeight="{ThemeResource TeachingTipMaxHeight}"
                                  MaxWidth="{ThemeResource TeachingTipMaxWidth}"
                                  Grid.ColumnSpan="5"
                                  Grid.RowSpan="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.RowDefinitions>
                                <Polygon x:Name="TopTailPolygonHighlight"
                                         Grid.Row="0"
                                         Grid.Column="2"
                                         Margin="{StaticResource TeachingTipTopHighlightOffsetForBorder}"
                                         VerticalAlignment="Top"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{ThemeResource TeachingTipTopHighlightBrush}"
                                         StrokeThickness="{StaticResource TeachingTipTopHighlightHeight}"
                                         Points="0,10 10,0 20,10"/>
                                <Grid x:Name="ContentRootGrid"
                                      AutomationProperties.LandmarkType="Custom"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      FlowDirection="{TemplateBinding FlowDirection}"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Grid.RowSpan="3"
                                      v1809:CornerRadius="{TemplateBinding CornerRadius}"
                                      v1803:CornerRadius="{ThemeResource OverlayCornerRadius}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border x:Name="HeroContentBorder"
                                            Grid.Row="0"
                                            Child="{TemplateBinding HeroContent}"
                                            Background="{TemplateBinding Background}"
                                            Visibility="Collapsed"/>
                                    <Grid x:Name="NonHeroContentRootGrid" Grid.Row="1">
                                        <ScrollViewer Foreground="{TemplateBinding Foreground}" VerticalScrollBarVisibility="Hidden">
                                            <StackPanel Margin="0">
                                                <Grid Grid.Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Border x:Name="IconBorder" Grid.Column="0" Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IconElement}"/>
                                                    <StackPanel x:Name="TitlesStackPanel" Grid.Column="1" Visibility="Collapsed">
                                                        <TextBlock x:Name="TitleTextBlock" Grid.Column="0" Text="{TemplateBinding Title}" TextWrapping="WrapWholeWords" FontWeight="SemiBold"/>
                                                        <TextBlock x:Name="SubtitleTextBlock" Grid.Row="1" Text="{TemplateBinding Subtitle}" TextWrapping="WrapWholeWords"/>
                                                    </StackPanel>
                                                </Grid>
                                                <ContentPresenter x:Name="MainContentPresenter" Grid.Row="1" Content="{TemplateBinding Content}" Margin="0" Padding="0"/>
                                                <Grid Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button x:Name="ActionButton"
                                                            HorizontalAlignment="Stretch"
                                                            Content="{TemplateBinding ActionButtonContent}"
                                                            Style="{TemplateBinding ActionButtonStyle}" 
                                                            Command="{TemplateBinding ActionButtonCommand}"
                                                            CommandParameter="{TemplateBinding ActionButtonCommandParameter}"/>
                                                    <Button x:Name="CloseButton"
                                                            HorizontalAlignment="Stretch"
                                                            Content="{TemplateBinding CloseButtonContent}"
                                                            Style="{TemplateBinding CloseButtonStyle}"
                                                            Command="{TemplateBinding CloseButtonCommand}"
                                                            CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                                                            Grid.Column="1"/>
                                                </Grid>
                                            </StackPanel>
                                        </ScrollViewer>
                                        <Button x:Name="AlternateCloseButton"
                                                Width="{StaticResource TeachingTipAlternateCloseButtonSize}"
                                                Height="{StaticResource TeachingTipAlternateCloseButtonSize}"
                                                Background="Transparent"
                                                VerticalAlignment="Top"
                                                HorizontalAlignment="Right"
                                                BorderThickness="{ThemeResource TeachingTipAlternateCloseButtonBorderThickness}"
                                                Foreground="{TemplateBinding Foreground}">
                                            <Viewbox Width="{StaticResource TeachingTipAlternateCloseButtonGlyphSize}"
                                                     Height="{StaticResource TeachingTipAlternateCloseButtonGlyphSize}">
                                                <SymbolIcon Symbol="Cancel"/>
                                            </Viewbox>
                                        </Button>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="TopHighlightLeft"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Height="{StaticResource TeachingTipTopHighlightHeight}"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Stretch" 
                                      Background="{ThemeResource TeachingTipTopHighlightBrush}"
                                      Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopLeftHighlightMargin}"/>
                                <Grid x:Name="TopHighlightRight"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Height="{StaticResource TeachingTipTopHighlightHeight}"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Stretch"
                                      Background="{ThemeResource TeachingTipTopHighlightBrush}"
                                      Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopRightHighlightMargin}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCommonButtonStyle" TargetType="ToggleButton">
        <Setter Property="MaxWidth" Value="Infinity"/>
        <Setter Property="MinWidth" Value="{ThemeResource InkToolbarButtonWidth}" />
        <Setter Property="MinHeight" Value="{ThemeResource InkToolbarButtonHeight}" />
        <Setter Property="MaxHeight" Value="{ThemeResource InkToolbarButtonHeight}" />
        <Setter Property="BorderThickness" Value="{ThemeResource InkToolbarButtonBorderThemeThickness}" />
        <Setter Property="Background" Value="{ThemeResource InkToolbarButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource InkToolbarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrush}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="Padding" Value="0,0,0,0" />
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="2" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" RadiusX="2" RadiusY="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonLeftStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="2,0,0,2" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" RadiusX="2" RadiusY="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonCenterStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="0" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" RadiusX="2" RadiusY="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonRightStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="0,2,2,0" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" RadiusX="2" RadiusY="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonHiddenIndicatorStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="2" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonHiddenIndicatorLeftStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="2,0,0,2" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="2,0,0,2"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonHiddenIndicatorCenterStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="0" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomInkToolbarCustomPenButtonHiddenIndicatorRightStyle" BasedOn="{StaticResource CustomInkToolbarCommonButtonStyle}" TargetType="InkToolbarCustomPenButton">
        <Setter Property="MinStrokeWidth" Value="1"/>
        <Setter Property="MaxStrokeWidth" Value="10"/>
        <Setter Property="SelectedStrokeWidth" Value="5"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="SelectedBrushIndex" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="InkToolbarCustomPenButton">
                    <Grid x:Name="RootElement" v1809:CornerRadius="0,2,2,0" Background="{TemplateBinding Background}" Height="{ThemeResource InkToolbarButtonHeight}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="PointerOver"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPointerOver}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPointerOver}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPointerOver}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonHoverForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.(RevealBrush.State)" Value="Pressed"/>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource ButtonRevealBorderBrushPressed}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundPressed}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarButtonPressedForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="RootElement.Background" Value="{ThemeResource InkToolbarButtonBackgroundDisabled}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource InkToolbarButtonBorderBrushDisabled}"/>
                                        <Setter Target="Border.Margin" Value="0"/>
                                        <v1809:Setter Target="Border.CornerRadius" Value="0,2,2,0"/>
                                        <Setter Target="Content.Foreground" Value="{ThemeResource InkToolbarButtonForegroundDisabled}"/>
                                        <Setter Target="ExtensionGlyph.Foreground" Value="{ThemeResource InkToolbarDisabledForegroundThemeBrush}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate"/>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused"/>
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="PointerFocused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="GlyphVisualStates">
                                <VisualState x:Name="ShowExtensionGlyph">
                                    <VisualState.Setters>
                                        <Setter Target="ExtensionGlyph.Opacity" Value="1"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HideExtensionGlyph"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlowDirectionStates">
                                <VisualState x:Name="LeftToRight"/>
                                <VisualState x:Name="RightToLeft"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonFlyoutDirectionStates">
                                <VisualState x:Name="BottomDirection"/>
                                <VisualState x:Name="TopDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Top"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,2,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE96D;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirection">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="0,0,2,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26C;"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftDirectionRTL">
                                    <VisualState.Setters>
                                        <Setter Target="SelectionAccent.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="SelectionAccent.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="SelectionAccent.Height" Value="auto"/>
                                        <Setter Target="SelectionAccent.Width" Value="2"/>
                                        <Setter Target="ExtensionGlyph.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="ExtensionGlyph.VerticalAlignment" Value="Center"/>
                                        <Setter Target="ExtensionGlyph.Margin" Value="2,0,0,0"/>
                                        <Setter Target="ExtensionGlyph.Text" Value="&#xE26B;"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="ContentBackground" Fill="Transparent"/>
                        <TextBlock x:Name="ExtensionGlyph" AutomationProperties.AccessibilityView="Raw" Style="{StaticResource InkToolbarExtensionGlyphStyle}"/>
                        <ContentPresenter x:Name="Content" HighContrastAdjustment="None" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Grid.ColumnSpan="2" Margin="1,0" Grid.RowSpan="2"/>
                        <Rectangle x:Name="SelectionAccent" Style="{StaticResource InkToolbarSelectionAccentStyle}" Visibility="Collapsed"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="FlipViewStyleRoundedButtons" TargetType="FlipView">
        <Setter Property="Background" Value="{ThemeResource FlipViewBackground}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TabNavigation" Value="Once"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False"/>
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False"/>
        <Setter Property="ScrollViewer.IsHorizontalScrollChainingEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsVerticalScrollChainingEnabled" Value="True"/>
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False"/>
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel AreScrollSnapPointsRegular="True" Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="FlipView">
                    <Grid Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding CornerRadius}">
                        <Grid.Resources>
                            <ControlTemplate x:Key="HorizontalNextTemplate" TargetType="Button">
                                <Border x:Name="Root" v1809:CornerRadius="2,0,0,2" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E3;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root" v1809:CornerRadius="0,2,2,0" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E2;" HorizontalAlignment="Center" MirroredWhenRightToLeft="True" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalNextTemplate" TargetType="Button">
                                <Border x:Name="Root" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E5;" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root" Background="{ThemeResource FlipViewNextPreviousButtonBackground}" BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}" BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal"/>
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}"/>
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow" FontFamily="{ThemeResource SymbolThemeFontFamily}" Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}" FontSize="12" Glyph="&#xE0E4;" HorizontalAlignment="Center" UseLayoutRounding="False" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Grid.Resources>
                        <v1809:Grid.BackgroundTransition>
                            <BrushTransition/>
                        </v1809:Grid.BackgroundTransition>
                        <ScrollViewer x:Name="ScrollingHost" AutomationProperties.AccessibilityView="Raw" BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}" HorizontalSnapPointsType="MandatorySingle" IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}" IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}" IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}" IsTabStop="False" IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}" IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}" Padding="{TemplateBinding Padding}" TabNavigation="{TemplateBinding TabNavigation}" VerticalSnapPointsType="MandatorySingle" VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" ZoomMode="Disabled">
                            <ItemsPresenter/>
                        </ScrollViewer>
                        <Button x:Name="PreviousButtonHorizontal" HorizontalAlignment="Left" Height="36" IsTabStop="False" Template="{StaticResource HorizontalPreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Center" Width="20"/>
                        <Button x:Name="NextButtonHorizontal" HorizontalAlignment="Right" Height="36" IsTabStop="False" Template="{StaticResource HorizontalNextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Center" Width="20"/>
                        <Button x:Name="PreviousButtonVertical" HorizontalAlignment="Center" Height="20" IsTabStop="False" Template="{StaticResource VerticalPreviousTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Top" Width="36"/>
                        <Button x:Name="NextButtonVertical" HorizontalAlignment="Center" Height="20" IsTabStop="False" Template="{StaticResource VerticalNextTemplate}" UseSystemFocusVisuals="False" VerticalAlignment="Bottom" Width="36"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <RevealBackgroundBrush x:Key="ButtonAccentRevealBackgroundBrushPressed" Color="#8C8C8C" FallbackColor="{StaticResource SystemBaseMediumLowColor}" />

    <ResourceDictionary.ThemeDictionaries>
        <!-- HeaderScrollShadowConverter expects DropShadowPanelThemedStyle to set ShadowOpacity at index 0 -->
        <ResourceDictionary x:Key="Light">
            <Style x:Key="DropShadowPanelThemedStyle" TargetType="controls:DropShadowPanel">
                <Setter Property="ShadowOpacity" Value="0.15"/>
            </Style>
            <Brush x:Key="DisabledButtonBackgroundThemedStyle" >#AEAEAE</Brush>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
            <Style x:Key="DropShadowPanelThemedStyle" TargetType="controls:DropShadowPanel">
                <Setter Property="ShadowOpacity" Value="0.3"/>
            </Style>
            <Brush x:Key="DisabledButtonBackgroundThemedStyle">#656565</Brush>
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <Style x:Key="DropShadowPanelThemedStyle" TargetType="controls:DropShadowPanel">
                <Setter Property="ShadowOpacity" Value="0.3"/>
            </Style>
            <Brush x:Key="DisabledButtonBackgroundThemedStyle">#656565</Brush>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>
    

</ResourceDictionary>
