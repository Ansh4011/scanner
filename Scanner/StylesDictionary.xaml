<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:v1803="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:v1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:belowv1809="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract,7)"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:local="using:Scanner"
    xmlns:animatedvisuals="using:Microsoft.UI.Xaml.Controls.AnimatedVisuals"
    xmlns:windows11Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 14)"
    xmlns:windows11NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract, 14)">

    <windows11Present:Style x:Key="FontIconStyleSegoeFluentIcons" TargetType="FontIcon">
        <Setter Property="FontFamily" Value="Segoe Fluent Icons"/>
    </windows11Present:Style>

    <windows11NotPresent:Style x:Key="FontIconStyleSegoeFluentIcons" TargetType="FontIcon">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets"/>
    </windows11NotPresent:Style>

    <Style x:Key="FlipViewStyleRoundedButtons" TargetType="FlipView">
        <Setter Property="Background" Value="{ThemeResource FlipViewBackground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="TabNavigation" Value="Once" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
        <Setter Property="ScrollViewer.IsHorizontalRailEnabled" Value="False" />
        <Setter Property="ScrollViewer.IsVerticalRailEnabled" Value="False" />
        <Setter Property="ScrollViewer.IsHorizontalScrollChainingEnabled" Value="True" />
        <Setter Property="ScrollViewer.IsVerticalScrollChainingEnabled" Value="True" />
        <Setter Property="ScrollViewer.IsDeferredScrollingEnabled" Value="False" />
        <Setter Property="ScrollViewer.BringIntoViewOnFocusChange" Value="True" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel AreScrollSnapPointsRegular="True" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="FlipView">
                    <Grid
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        v1809:CornerRadius="{TemplateBinding CornerRadius}"
                        v1803:CornerRadius="{ThemeResource ControlCornerRadius}">
                        <Grid.Resources>
                            <ControlTemplate x:Key="HorizontalNextTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                    Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                    BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                    BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                    v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                                    v1803:CornerRadius="{ThemeResource ControlCornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDDA;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        MirroredWhenRightToLeft="True"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="HorizontalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                    Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                    BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                    BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                    v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                                    v1803:CornerRadius="{ThemeResource ControlCornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDD9;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        MirroredWhenRightToLeft="True"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalNextTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                        Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                        BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                        BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                        v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                                        v1803:CornerRadius="{ThemeResource ControlCornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDDC;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                            <ControlTemplate x:Key="VerticalPreviousTemplate" TargetType="Button">
                                <Border x:Name="Root"
                                    Background="{ThemeResource FlipViewNextPreviousButtonBackground}"
                                    BorderThickness="{ThemeResource FlipViewButtonBorderThemeThickness}"
                                    BorderBrush="{ThemeResource FlipViewNextPreviousButtonBorderBrush}"
                                    v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                                    v1803:CornerRadius="{ThemeResource ControlCornerRadius}">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="PointerOver">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPointerOver}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="Background">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBackgroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="BorderBrush">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousButtonBorderBrushPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Foreground">
                                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource FlipViewNextPreviousArrowForegroundPressed}" />
                                                    </ObjectAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" RepeatBehavior="Forever">
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:0.016" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                        <DiscreteDoubleKeyFrame KeyTime="0:0:30" Value="{ThemeResource FlipViewButtonScalePressed}"/>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <FontIcon x:Name="Arrow"
                                        FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                        FontSize="{ThemeResource FlipViewButtonFontSize}"
                                        Foreground="{ThemeResource FlipViewNextPreviousArrowForeground}"
                                        Glyph="&#xEDDB;"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        UseLayoutRounding="False"
                                        RenderTransformOrigin="0.5, 0.5">
                                        <FontIcon.RenderTransform>
                                            <ScaleTransform x:Name="ScaleTransform" ScaleY="1" ScaleX="1" />
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Border>
                            </ControlTemplate>
                        </Grid.Resources>
                        <ScrollViewer x:Name="ScrollingHost"
                            VerticalSnapPointsType="MandatorySingle"
                            HorizontalSnapPointsType="MandatorySingle"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                            IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                            Padding="{TemplateBinding Padding}"
                            ZoomMode="Disabled"
                            TabNavigation="{TemplateBinding TabNavigation}"
                            IsTabStop="False"
                            AutomationProperties.AccessibilityView="Raw">
                            <ItemsPresenter />
                        </ScrollViewer>
                        <Button x:Name="PreviousButtonHorizontal"
                            Template="{StaticResource HorizontalPreviousTemplate}"
                            Width="16"
                            Height="38"
                            Margin="16"
                            v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center" />
                        <Button x:Name="NextButtonHorizontal"
                            Template="{StaticResource HorizontalNextTemplate}"
                            Width="16"
                            Height="38"
                            Margin="16"
                            v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center" />
                        <Button x:Name="PreviousButtonVertical"
                            Template="{StaticResource VerticalPreviousTemplate}"
                            Width="38"
                            Height="16"
                            Margin="16"
                            v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top" />
                        <Button x:Name="NextButtonVertical"
                            Template="{StaticResource VerticalNextTemplate}"
                            Width="38"
                            Height="16"
                            Margin="16"
                            v1809:CornerRadius="{ThemeResource ControlCornerRadius}"
                            IsTabStop="False"
                            UseSystemFocusVisuals="False"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SplitButtonAccentPartStyle" TargetType="Button">
        <Setter Property="BackgroundSizing" Value="OuterBorderEdge"/>
        <Setter Property="Foreground" Value="{ThemeResource AccentButtonForeground}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="{ThemeResource ButtonBorderThemeThickness}"/>
        <Setter Property="Padding" Value="{StaticResource ButtonPadding}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}"/>
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}"/>
        <Setter Property="FocusVisualMargin" Value="-3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" BackgroundSizing="{TemplateBinding BackgroundSizing}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" CornerRadius="{TemplateBinding CornerRadius}" ContentTransitions="{TemplateBinding ContentTransitions}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPointerOver}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundPressed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonBackgroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AccentButtonForegroundDisabled}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FilledTeachingTipStyle" TargetType="muxc:TeachingTip">
        <Setter Property="Background" Value="{ThemeResource TeachingTipBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{ThemeResource TeachingTipForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{ThemeResource TeachingTipBorderBrush}"/>
        <Setter Property="ActionButtonStyle" Value="{ThemeResource DefaultButtonStyle}"/>
        <Setter Property="CloseButtonStyle" Value="{ThemeResource DefaultButtonStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:TeachingTip">
                    <Border x:Name="Container"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="LightDismissStates">
                                <VisualState x:Name="LightDismiss">
                                    <VisualState.Setters>
                                        <Setter Target="TailEdgeBorder.Background" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                        <Setter Target="TailPolygon.Fill" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                        <Setter Target="TopTailPolygonHighlight.Fill" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                        <Setter Target="ContentRootGrid.Background" Value="{ThemeResource TeachingTipTransientBackground}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NormalDismiss"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ButtonsStates">
                                <VisualState x:Name="NoButtonsVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Collapsed"/>

                                        <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="ActionButtonVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Collapsed"/>

                                        <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                        <Setter Target="ActionButton.(Grid.Column)" Value="1"/>
                                        <Setter Target="ActionButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="CloseButtonVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Visible"/>
                                        <Setter Target="CloseButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>

                                        <Setter Target="ActionButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BothButtonsVisible">
                                    <VisualState.Setters>
                                        <Setter Target="CloseButton.Visibility" Value="Visible"/>
                                        <Setter Target="CloseButton.Margin" Value="{StaticResource TeachingTipRightButtonMargin}"/>

                                        <Setter Target="ActionButton.Visibility" Value="Visible"/>
                                        <Setter Target="ActionButton.(Grid.Column)" Value="0"/>
                                        <Setter Target="ActionButton.Margin" Value="{StaticResource TeachingTipLeftButtonMargin}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ContentStates">
                                <VisualState x:Name="Content">
                                    <VisualState.Setters>
                                        <Setter Target="MainContentPresenter.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoContent">
                                    <VisualState.Setters>
                                        <Setter Target="MainContentPresenter.Margin" Value="0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CloseButtonLocations">
                                <VisualState x:Name="HeaderCloseButton">
                                    <VisualState.Setters>
                                        <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithHeaderCloseButton}"/>
                                        <Setter Target="AlternateCloseButton.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="FooterCloseButton">
                                    <VisualState.Setters>
                                        <Setter Target="TitlesStackPanel.Margin" Value="{StaticResource TeachingTipTitleStackPanelMarginWithFooterCloseButton}"/>
                                        <Setter Target="AlternateCloseButton.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="IconStates">
                                <VisualState x:Name="Icon">
                                    <VisualState.Setters>
                                        <Setter Target="IconBorder.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithIcon}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="NoIcon">
                                    <VisualState.Setters>
                                        <Setter Target="IconBorder.Margin" Value="{StaticResource TeachingTipIconPresenterMarginWithoutIcon}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HeroContentPlacementStates">
                                <VisualState x:Name="HeroContentTop">
                                    <VisualState.Setters>
                                        <Setter Target="HeroContentBorder.(Grid.Row)" Value="0"/>
                                        <v1809:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopCornerRadiusFilterConverter}}"/>
                                        <v1803:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopCornerRadiusFilterConverter}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="HeroContentBottom">
                                    <VisualState.Setters>
                                        <Setter Target="HeroContentBorder.(Grid.Row)" Value="2"/>
                                        <v1809:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"/>
                                        <v1803:Setter Target="HeroContentBorder.CornerRadius" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomCornerRadiusFilterConverter}}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="PlacementStates">
                                <VisualState x:Name="Top">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>

                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>

                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Bottom">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Left">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Right">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TopRight">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="TopLeft">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BottomRight">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="BottomLeft">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessBottom}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource BottomThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Visible"/>
                                        <Setter Target="TopTailPolygonHighlight.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,10 10,0 20,10"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="0"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginBottom}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftTop">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="LeftBottom">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessLeft}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource LeftThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10 0,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="4"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginLeft}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightTop">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="RightBottom">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessRight}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Right"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="3"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="1"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource RightThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="10,0 0,10 10,20"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="2"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="0"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginRight}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Center">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessTop}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Visible"/>
                                        <Setter Target="TailEdgeBorder.VerticalAlignment" Value="Top"/>
                                        <Setter Target="TailEdgeBorder.HorizontalAlignment" Value="Stretch"/>
                                        <Setter Target="TailEdgeBorder.Height" Value="{StaticResource TeachingTipBorderThickness}"/>
                                        <Setter Target="TailEdgeBorder.Width" Value="Auto"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailEdgeBorder.(Grid.Column)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.RowSpan)" Value="1"/>
                                        <Setter Target="TailEdgeBorder.(Grid.ColumnSpan)" Value="3"/>
                                        <v1809:Setter Target="TailEdgeBorder.Margin" Value="{Binding CornerRadius, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <v1803:Setter Target="TailEdgeBorder.Margin" Value="{Binding Source={ThemeResource OverlayCornerRadius}, Converter={StaticResource TopThicknessFilterConverter}}"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Visible"/>
                                        <Setter Target="TailPolygon.Points" Value="0,0 10,10, 20,0"/>
                                        <Setter Target="TailPolygon.(Grid.Row)" Value="4"/>
                                        <Setter Target="TailPolygon.(Grid.Column)" Value="2"/>
                                        <Setter Target="TailPolygon.HorizontalAlignment" Value="Center"/>
                                        <Setter Target="TailPolygon.VerticalAlignment" Value="Bottom"/>
                                        <Setter Target="TailPolygon.Margin" Value="{StaticResource TeachingTipTailPolygonMarginTop}"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Untargeted">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRootGrid.BorderThickness" Value="{StaticResource TeachingTipContentBorderThicknessUntargeted}"/>
                                        <Setter Target="TailEdgeBorder.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopTailPolygonHighlight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TopHighlightRight.Visibility" Value="Collapsed"/>
                                        <Setter Target="TailPolygon.Visibility" Value="Collapsed"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid MinHeight="{ThemeResource TeachingTipMinHeight}"
                              MinWidth="{ThemeResource TeachingTipMinWidth}"
                              MaxWidth="{ThemeResource TeachingTipMaxWidth}"
                              AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                            </Grid.RowDefinitions>
                            <!-- This TailEdgeBorder needs to be z ordered underneath the TailPolygon while the TailOcclusionGrid needs to be over it, hence declaring these parts
                                 in this order. This is to achieve the desired occlusion of the tail's content edge border. The tail edge border is a low opacity highlight,
                                 which means we need to have the background color present underneath the highlight, hence the double grid here. -->
                            <Grid x:Name="TailEdgeBorder" Background="{TemplateBinding Background}">
                                <Grid Background="{TemplateBinding BorderBrush}"/>
                            </Grid>
                            <Polygon x:Name="TailPolygon"
                                     Fill="{TemplateBinding Background}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Top"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{StaticResource TeachingTipBorderThickness}"/>
                            <Grid x:Name="TailOcclusionGrid"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Top"
                                  MinHeight="{ThemeResource TeachingTipMinHeight}"
                                  MinWidth="{ThemeResource TeachingTipMinWidth}"
                                  MaxHeight="{ThemeResource TeachingTipMaxHeight}"
                                  MaxWidth="{ThemeResource TeachingTipMaxWidth}"
                                  Grid.ColumnSpan="5"
                                  Grid.RowSpan="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailMargin}"/>
                                    <ColumnDefinition Width="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailMargin}"/>
                                    <RowDefinition Height="{StaticResource TeachingTipTailShortSideLength}"/>
                                </Grid.RowDefinitions>
                                <Polygon x:Name="TopTailPolygonHighlight"
                                         Grid.Row="0"
                                         Grid.Column="2"
                                         Margin="{StaticResource TeachingTipTopHighlightOffsetForBorder}"
                                         VerticalAlignment="Top"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{ThemeResource TeachingTipTopHighlightBrush}"
                                         StrokeThickness="{StaticResource TeachingTipTopHighlightHeight}"
                                         Points="0,10 10,0 20,10"/>
                                <Grid x:Name="ContentRootGrid"
                                      AutomationProperties.LandmarkType="Custom"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      FlowDirection="{TemplateBinding FlowDirection}"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Grid.RowSpan="3"
                                      v1809:CornerRadius="{TemplateBinding CornerRadius}"
                                      v1803:CornerRadius="{ThemeResource OverlayCornerRadius}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <Border x:Name="HeroContentBorder"
                                            Grid.Row="0"
                                            Child="{TemplateBinding HeroContent}"
                                            Background="{TemplateBinding Background}"
                                            Visibility="Collapsed"/>
                                    <Grid x:Name="NonHeroContentRootGrid" Grid.Row="1">
                                        <ScrollViewer Foreground="{TemplateBinding Foreground}" VerticalScrollBarVisibility="Hidden">
                                            <StackPanel Margin="0">
                                                <Grid Grid.Row="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>

                                                    <Border x:Name="IconBorder" Grid.Column="0" Child="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.IconElement}"/>
                                                    <StackPanel x:Name="TitlesStackPanel" Grid.Column="1" Visibility="Collapsed">
                                                        <TextBlock x:Name="TitleTextBlock" Grid.Column="0" Text="{TemplateBinding Title}" TextWrapping="WrapWholeWords" FontWeight="SemiBold"/>
                                                        <TextBlock x:Name="SubtitleTextBlock" Grid.Row="1" Text="{TemplateBinding Subtitle}" TextWrapping="WrapWholeWords"/>
                                                    </StackPanel>
                                                </Grid>
                                                <ContentPresenter x:Name="MainContentPresenter" Grid.Row="1" Content="{TemplateBinding Content}" Margin="0" Padding="0"/>
                                                <Grid Grid.Row="2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Button x:Name="ActionButton"
                                                            HorizontalAlignment="Stretch"
                                                            Content="{TemplateBinding ActionButtonContent}"
                                                            Style="{TemplateBinding ActionButtonStyle}"
                                                            Command="{TemplateBinding ActionButtonCommand}"
                                                            CommandParameter="{TemplateBinding ActionButtonCommandParameter}"/>
                                                    <Button x:Name="CloseButton"
                                                            HorizontalAlignment="Stretch"
                                                            Content="{TemplateBinding CloseButtonContent}"
                                                            Style="{TemplateBinding CloseButtonStyle}"
                                                            Command="{TemplateBinding CloseButtonCommand}"
                                                            CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                                                            Grid.Column="1"/>
                                                </Grid>
                                            </StackPanel>
                                        </ScrollViewer>
                                        <Button x:Name="AlternateCloseButton"
                                                Width="{StaticResource TeachingTipAlternateCloseButtonSize}"
                                                Height="{StaticResource TeachingTipAlternateCloseButtonSize}"
                                                Background="Transparent"
                                                VerticalAlignment="Top"
                                                HorizontalAlignment="Right"
                                                BorderThickness="{ThemeResource TeachingTipAlternateCloseButtonBorderThickness}"
                                                Foreground="{TemplateBinding Foreground}">
                                            <Viewbox Width="{StaticResource TeachingTipAlternateCloseButtonGlyphSize}"
                                                     Height="{StaticResource TeachingTipAlternateCloseButtonGlyphSize}">
                                                <SymbolIcon Symbol="Cancel"/>
                                            </Viewbox>
                                        </Button>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="TopHighlightLeft"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Height="{StaticResource TeachingTipTopHighlightHeight}"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Stretch"
                                      Background="{ThemeResource TeachingTipTopHighlightBrush}"
                                      Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopLeftHighlightMargin}"/>
                                <Grid x:Name="TopHighlightRight"
                                      Grid.Row="1"
                                      Grid.Column="1"
                                      Grid.ColumnSpan="3"
                                      Height="{StaticResource TeachingTipTopHighlightHeight}"
                                      VerticalAlignment="Top"
                                      HorizontalAlignment="Stretch"
                                      Background="{ThemeResource TeachingTipTopHighlightBrush}"
                                      Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopRightHighlightMargin}"/>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="muxc:NavigationView" x:Key="NavigationViewStyleNoContent">
        <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />
        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:NavigationView">
                    <Grid x:Name="RootGrid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="DisplayModeGroup">
                                <VisualState x:Name="Compact"/>

                                <VisualState x:Name="Expanded" />

                                <VisualState x:Name="Minimal">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                        <Setter Target="NavigationViewBackButton.Style" Value="{ThemeResource NavigationBackButtonSmallStyle}" />
                                        <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" />
                                        <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TopNavigationMinimal">
                                    <VisualState.Setters>
                                        <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource TopNavigationViewContentGridBorderThickness}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="MinimalWithBackButton">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Margin" Value="{ThemeResource NavigationViewMinimalHeaderMargin}" />
                                        <Setter Target="NavigationViewBackButton.Style" Value="{ThemeResource NavigationBackButtonSmallStyle}" />
                                        <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource NavigationViewMinimalContentGridBorderThickness}" />
                                        <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource NavigationViewMinimalContentGridCornerRadius}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TogglePaneGroup">
                                <VisualState x:Name="TogglePaneButtonCollapsed" />
                                <VisualState x:Name="TogglePaneButtonVisible">
                                    <VisualState.Setters>
                                        <!-- Might not need this setter when all the margins/paddings will be adequately set. -->
                                        <!-- This MinHeight setter is only here to ensure that AutoSuggestBox doesn't draw over ToggleButton. -->
                                        <Setter Target="PaneContentGridToggleButtonRow.MinHeight" Value="{StaticResource NavigationViewPaneHeaderRowMinHeight}"/>
                                        <Setter Target="PaneTitlePresenter.Margin" Value="{ThemeResource NavigationViewItemInnerHeaderMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="HeaderGroup">
                                <VisualState x:Name="HeaderVisible" />
                                <VisualState x:Name="HeaderCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="AutoSuggestGroup">
                                <VisualState x:Name="AutoSuggestBoxVisible" />
                                <VisualState x:Name="AutoSuggestBoxCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="AutoSuggestArea.Visibility" Value="Collapsed" />
                                        <Setter Target="TopPaneAutoSuggestArea.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateGroup">
                                <VisualState x:Name="NotClosedCompact" />
                                <VisualState x:Name="ClosedCompact">
                                    <VisualState.Setters>
                                        <Setter Target="PaneAutoSuggestBoxPresenter.Visibility" Value="Collapsed"/>
                                        <Setter Target="PaneAutoSuggestButton.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneStateListSizeGroup">
                                <VisualState x:Name="ListSizeFull"/>
                                <VisualState x:Name="ListSizeCompact">
                                    <VisualState.Setters>
                                        <Setter Target="PaneContentGrid.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}"/>
                                        <Setter Target="ShadowCaster.Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CompactPaneLength}" />
                                        <Setter Target="PaneTitleTextBlock.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneHeaderContentBorder.Visibility" Value="Collapsed" />
                                        <Setter Target="PaneCustomContentBorder.HorizontalAlignment" Value="Left"/>
                                        <Setter Target="FooterContentBorder.HorizontalAlignment" Value="Left"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneOverlayGroup">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="PaneNotOverlaying" To="PaneOverlaying">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.35" KeySpline="0.1,0.9 0.2,1.0" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.35" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition From="PaneOverlaying" To="PaneNotOverlaying">
                                        <Storyboard x:Name="ShadowCasterEaseOutStoryboard">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCasterTransform" Storyboard.TargetProperty="TranslateX">
                                                <DiscreteDoubleKeyFrame KeyTime="0" Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.12" KeySpline="0.1,0.9 0.2,1.0" Value="{Binding ElementName=RootSplitView, Path=TemplateSettings.NegativeOpenPaneLengthMinusCompactLength}" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:0.12" Value="0" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ShadowCaster" Storyboard.TargetProperty="HorizontalAlignment">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Left"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="PaneOverlaying" />
                                <VisualState x:Name="PaneNotOverlaying">
                                    <VisualState.Setters>
                                        <Setter Target="RootSplitView.BorderBrush" Value="Transparent" />
                                        <Setter Target="ShadowCaster.Opacity" Value="0" />
                                        <Setter Target="RootSplitView.PaneBackground" Value="{ThemeResource NavigationViewExpandedPaneBackground}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                <VisualState x:Name="TitleBarVisible" />
                                <VisualState x:Name="TitleBarCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="OverflowLabelGroup">
                                <VisualState x:Name="OverflowButtonWithLabel" />
                                <VisualState x:Name="OverflowButtonNoLabel">
                                    <VisualState.Setters>
                                        <Setter Target="TopNavOverflowButton.Style" Value="{ThemeResource NavigationViewOverflowButtonNoLabelStyleWhenPaneOnTop}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="BackButtonGroup">
                                <VisualState x:Name="BackButtonVisible" />
                                <VisualState x:Name="BackButtonCollapsed">
                                    <VisualState.Setters>
                                        <Setter Target="BackButtonPlaceholderOnTopNav.Width" Value="0" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneVisibilityGroup">
                                <VisualState x:Name="PaneVisible" />
                                <VisualState x:Name="PaneCollapsed">
                                    <VisualState.Setters>
                                        <!-- Note that RootSplitView.DisplayMode is set in code so we don't want to -->
                                        <!-- write it here and interfere. But these values work together to hide -->
                                        <!-- the left pane. -->
                                        <Setter Target="RootSplitView.CompactPaneLength" Value="0" />
                                        <Setter Target="ShadowCaster.Width" Value="0" />
                                        <Setter Target="PaneToggleButtonGrid.Visibility" Value="Collapsed" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="PaneSeparatorStates">
                                <VisualState x:Name="SeparatorCollapsed" />
                                <VisualState x:Name="SeparatorVisible">
                                    <VisualState.Setters>
                                        <Setter Target="VisualItemsSeparator.Visibility" Value="Visible"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <!-- Button grid -->
                        <Grid
                            x:Name="PaneToggleButtonGrid"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Canvas.ZIndex="100">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <Grid x:Name="TogglePaneTopPadding"
                                  Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                            <Grid x:Name="ButtonHolderGrid" Grid.Row="1" Margin="{ThemeResource NavigationViewButtonHolderGridMargin}">
                                <Button
                                    x:Name="NavigationViewBackButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    VerticalAlignment="Top"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.BackButtonVisibility}"
                                    IsEnabled="{TemplateBinding IsBackEnabled}">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewBackButtonToolTip"/>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button 
                                    x:Name="NavigationViewCloseButton"
                                    Style="{StaticResource NavigationBackButtonNormalStyle}"
                                    VerticalAlignment="Top">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="NavigationViewCloseButtonToolTip"/>
                                    </ToolTipService.ToolTip>
                                </Button>
                                <Button
                                    x:Name="TogglePaneButton"
                                    Style="{TemplateBinding PaneToggleButtonStyle}"
                                    AutomationProperties.LandmarkType="Navigation"
                                    HorizontalAlignment="Center"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.PaneToggleButtonVisibility}"
                                    VerticalAlignment="Top"
                                    MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}"
                                    FocusVisualMargin="0">
                                    <TextBlock
                                        x:Name="PaneTitleTextBlock"
                                        Grid.Column="0"
                                        Margin="0,-2,0,0"
                                        Text="{TemplateBinding PaneTitle}"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Style="{StaticResource NavigationViewItemHeaderTextStyle}"/>
                                </Button>

                                <Grid
                                    x:Name="PaneTitleHolder"
                                    Height="40"
                                    Visibility="Collapsed">
                                    <ContentControl
                                        x:Name="PaneTitlePresenter"
                                        Margin="{ThemeResource NavigationViewPaneTitlePresenterMargin}"
                                        IsTabStop="False"
                                        HorizontalContentAlignment="Stretch"
                                        VerticalContentAlignment="Stretch"/>
                                </Grid>
                            </Grid>
                        </Grid>

                        <!-- Content layouts -->
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- DisplayMode top -->
                            <StackPanel
                                x:Name="TopNavArea"
                                Background="{ThemeResource NavigationViewTopPaneBackground}"
                                Grid.Row="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Top"
                                Canvas.ZIndex="1"
                                XYFocusKeyboardNavigation="Enabled">

                                <Grid x:Name="TopNavTopPadding"
                                      Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"/>

                                <Grid x:Name="TopNavGrid" 
                                      Height="{ThemeResource NavigationViewTopPaneHeight}"
                                      Margin="{ThemeResource TopNavigationViewTopNavGridMargin}"
                                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"
                                      BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*" MinWidth="{ThemeResource TopNavigationViewPaneCustomContentMinWidth}"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <Grid 
                                        x:Name="TopNavLeftPadding" 
                                        Grid.Column="1"
                                        Width="0"/>

                                    <ContentControl
                                        x:Name="PaneHeaderOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="2"/>

                                    <ContentControl
                                        x:Name="PaneTitleOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}"
                                        Grid.Column="2"/>

                                    <!-- Top nav ItemsRepeater -->
                                    <muxc:ItemsRepeaterScrollHost
                                            Grid.Column="3">
                                        <ScrollViewer
                                            HorizontalScrollMode="Disabled"
                                            HorizontalScrollBarVisibility="Hidden"
                                            VerticalScrollMode="Disabled"
                                            VerticalScrollBarVisibility="Hidden">
                                            <muxc:ItemsRepeater 
                                                AutomationProperties.LandmarkType="Navigation"
                                                AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                AutomationProperties.AccessibilityView = "Content"
                                                x:Name="TopNavMenuItemsHost">
                                                <muxc:ItemsRepeater.Layout>
                                                    <muxc:StackLayout Orientation="Horizontal"/>
                                                </muxc:ItemsRepeater.Layout>
                                            </muxc:ItemsRepeater>
                                        </ScrollViewer>
                                    </muxc:ItemsRepeaterScrollHost>

                                    <Button 
                                        x:Name="TopNavOverflowButton"
                                        Grid.Column="4"
                                        Content="More"
                                        Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}"
                                        Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                        <Button.Flyout>
                                            <Flyout
                                                v1803:Placement="Bottom"
                                                v1809:Placement="BottomEdgeAlignedRight"
                                                ElementSoundMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ElementSoundMode}">
                                                <Flyout.FlyoutPresenterStyle>
                                                    <Style TargetType="FlyoutPresenter">
                                                        <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}" />
                                                        <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                        <Setter Property="Margin" Value="0,-4,0,0" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                        <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                                        <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="FlyoutPresenter">
                                                                    <ScrollViewer
                                                                        x:Name="ScrollViewer"
                                                                        ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                                        HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                        HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                        VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                        VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                        AutomationProperties.AccessibilityView="Raw">
                                                                        <ContentPresenter
                                                                            x:Name="ContentPresenter"
                                                                            Background="{TemplateBinding Background}"
                                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                                            Content="{TemplateBinding Content}"
                                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                            Padding="{TemplateBinding Padding}"
                                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                            v1809:CornerRadius="{TemplateBinding CornerRadius}"
                                                                            v1803:CornerRadius="{ThemeResource OverlayCornerRadius}"/>
                                                                    </ScrollViewer>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </Flyout.FlyoutPresenterStyle>
                                                <muxc:ItemsRepeaterScrollHost>
                                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                        <muxc:ItemsRepeater
                                                                    AutomationProperties.AccessibilityView = "Content"
                                                                    x:Name="TopNavMenuItemsOverflowHost">
                                                            <muxc:ItemsRepeater.Layout>
                                                                <muxc:StackLayout />
                                                            </muxc:ItemsRepeater.Layout>
                                                        </muxc:ItemsRepeater>
                                                    </ScrollViewer>
                                                </muxc:ItemsRepeaterScrollHost>
                                            </Flyout>
                                        </Button.Flyout>
                                    </Button>

                                    <ContentControl
                                        x:Name="PaneCustomContentOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="5"/>

                                    <Grid
                                        x:Name="TopPaneAutoSuggestArea"
                                        Height="{ThemeResource NavigationViewTopPaneHeight}"
                                        Grid.Column="6">

                                        <ContentControl
                                            x:Name="TopPaneAutoSuggestBoxPresenter"
                                            Margin="{ThemeResource TopNavigationViewAutoSuggestBoxMargin}"
                                            MinWidth="216"
                                            IsTabStop="False"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Center"/>
                                    </Grid>

                                    <ContentControl
                                        x:Name="PaneFooterOnTopPane"
                                        IsTabStop="False"
                                        VerticalContentAlignment="Stretch"
                                        HorizontalContentAlignment="Stretch"
                                        Grid.Column="7" />
                                    <!-- Top footer menu ItemsRepeater -->
                                    <muxc:ItemsRepeater
                                        Grid.Column="8"
                                        AutomationProperties.LandmarkType="Navigation"
                                        AutomationProperties.AccessibilityView = "Content"
                                        x:Name="TopFooterMenuItemsHost">
                                        <muxc:ItemsRepeater.Layout>
                                            <muxc:StackLayout Orientation="Horizontal"/>
                                        </muxc:ItemsRepeater.Layout>
                                    </muxc:ItemsRepeater>

                                </Grid>
                                <Border
                                    x:Name="TopNavContentOverlayAreaGrid"
                                    Child="{TemplateBinding ContentOverlay}" />
                            </StackPanel>

                            <!-- Displaymode (compact/minimal/normal) left -->
                            <SplitView
                                x:Name="RootSplitView"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                BorderThickness="1"
                                CompactPaneLength="{TemplateBinding CompactPaneLength}"
                                DisplayMode="Inline"
                                IsPaneOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsPaneOpen, Mode=TwoWay}"
                                IsTabStop="False"
                                OpenPaneLength="{TemplateBinding OpenPaneLength}"
                                PaneBackground="{ThemeResource NavigationViewDefaultPaneBackground}"
                                Grid.Row="1"
                                v1809:CornerRadius="{ThemeResource OverlayCornerRadius}">

                                <SplitView.Pane>
                                    <Grid 
                                        x:Name="PaneContentGrid"
                                        BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}"
                                        HorizontalAlignment="Left"
                                        Margin="{ThemeResource NavigationViewPaneContentGridMargin}"
                                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="0"/>
                                            <!-- above button margin + back button space -->
                                            <RowDefinition x:Name="PaneContentGridToggleButtonRow" Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="0"/>
                                            <!-- above list margin -->
                                            <RowDefinition x:Name="ItemsContainerRow" Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Grid x:Name="ContentPaneTopPadding"
                                              Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"/>

                                        <Grid Grid.Row="2">
                                            <Grid.RowDefinitions>
                                                <RowDefinition x:Name="PaneHeaderContentBorderRow"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="PaneHeaderCloseButtonColumn"/>
                                                <ColumnDefinition x:Name="PaneHeaderToggleButtonColumn"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <ContentControl
                                                x:Name="PaneHeaderContentBorder"
                                                IsTabStop="False"
                                                VerticalContentAlignment="Stretch"
                                                HorizontalContentAlignment="Stretch"
                                                Grid.Column="2" />
                                        </Grid>

                                        <Grid
                                            x:Name="AutoSuggestArea"
                                            Grid.Row="3"
                                            Height="{ThemeResource NavigationViewAutoSuggestAreaHeight}"
                                            Margin="0,0,0,8"
                                            VerticalAlignment="Center">

                                            <ContentControl
                                                x:Name="PaneAutoSuggestBoxPresenter"
                                                Margin="{ThemeResource NavigationViewAutoSuggestBoxMargin}"
                                                IsTabStop="False"
                                                HorizontalContentAlignment="Stretch"
                                                VerticalContentAlignment="Center"/>

                                            <Button
                                                x:Name="PaneAutoSuggestButton"
                                                Visibility="Collapsed"
                                                Style="{ThemeResource NavigationViewPaneSearchButtonStyle}"
                                                Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.SmallerPaneToggleButtonWidth}">
                                                <Button.Resources>
                                                    <ResourceDictionary>
                                                        <ResourceDictionary.ThemeDictionaries>
                                                            <ResourceDictionary x:Key="Default">
                                                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver" />
                                                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed" />
                                                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled" />
                                                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver" />
                                                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed" />
                                                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled" />
                                                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver" />
                                                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed" />
                                                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled" />
                                                            </ResourceDictionary>
                                                            <ResourceDictionary x:Key="Light">
                                                                <StaticResource x:Key="ButtonBackgroundPointerOver" ResourceKey="NavigationViewItemBackgroundPointerOver" />
                                                                <StaticResource x:Key="ButtonBackgroundPressed" ResourceKey="NavigationViewItemBackgroundPressed" />
                                                                <StaticResource x:Key="ButtonBackgroundDisabled" ResourceKey="NavigationViewItemBackgroundDisabled" />
                                                                <StaticResource x:Key="ButtonForegroundPointerOver" ResourceKey="NavigationViewItemForegroundPointerOver" />
                                                                <StaticResource x:Key="ButtonForegroundPressed" ResourceKey="NavigationViewItemForegroundPressed" />
                                                                <StaticResource x:Key="ButtonForegroundDisabled" ResourceKey="NavigationViewItemForegroundDisabled" />
                                                                <StaticResource x:Key="ButtonBorderBrushPointerOver" ResourceKey="NavigationViewItemBorderBrushPointerOver" />
                                                                <StaticResource x:Key="ButtonBorderBrushPressed" ResourceKey="NavigationViewItemBorderBrushPressed" />
                                                                <StaticResource x:Key="ButtonBorderBrushDisabled" ResourceKey="NavigationViewItemBorderBrushDisabled" />
                                                            </ResourceDictionary>
                                                        </ResourceDictionary.ThemeDictionaries>
                                                    </ResourceDictionary>
                                                </Button.Resources>
                                            </Button>
                                        </Grid>

                                        <ContentControl
                                            x:Name="PaneCustomContentBorder"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Row="4" />

                                        <!-- "Non header" content -->
                                        <Grid x:Name="ItemsContainerGrid" Grid.Row="6">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <!-- MenuItems -->
                                                <RowDefinition Height="Auto"/>
                                                <!-- Separator if overflow -->
                                                <RowDefinition Height="Auto" />
                                                <!-- PaneFooter -->
                                                <RowDefinition Height="Auto"/>
                                                <!-- FooterItems -->
                                            </Grid.RowDefinitions>

                                            <!-- MenuItems -->
                                            <muxc:ItemsRepeaterScrollHost
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Stretch">
                                                <ScrollViewer x:Name="MenuItemsScrollViewer"
                                                    TabNavigation="local"
                                                    VerticalScrollBarVisibility="Auto">
                                                    <!-- Left nav ItemsRepeater -->
                                                    <muxc:ItemsRepeater
                                                        x:Name="MenuItemsHost"
                                                        AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                        AutomationProperties.AccessibilityView = "Content">
                                                        <muxc:ItemsRepeater.Layout>
                                                            <muxc:StackLayout />
                                                        </muxc:ItemsRepeater.Layout>
                                                    </muxc:ItemsRepeater>
                                                </ScrollViewer>
                                            </muxc:ItemsRepeaterScrollHost>

                                            <muxc:NavigationViewItemSeparator
                                                x:Name="VisualItemsSeparator"
                                                Grid.Row="1"
                                                Margin="0,0,0,2"
                                                Visibility="Collapsed"
                                                VerticalAlignment="Center"
                                                HorizontalAlignment="Stretch"/>

                                            <!-- PaneFooter -->
                                            <ContentControl x:Name="FooterContentBorder"
                                                        IsTabStop="False"
                                                        VerticalContentAlignment="Stretch"
                                                        HorizontalContentAlignment="Stretch"
                                                        Margin="0,0,0,4"
                                                        Grid.Row="2" />

                                            <!-- FooterItems -->
                                            <muxc:ItemsRepeaterScrollHost Grid.Row="3">
                                                <ScrollViewer x:Name="FooterItemsScrollViewer"
                                                    VerticalScrollBarVisibility="Auto"
                                                    v1809:VerticalAnchorRatio="1">
                                                    <muxc:ItemsRepeater
                                                        x:Name="FooterMenuItemsHost"
                                                        AutomationProperties.AccessibilityView = "Content">
                                                        <muxc:ItemsRepeater.Layout>
                                                            <muxc:StackLayout />
                                                        </muxc:ItemsRepeater.Layout>
                                                    </muxc:ItemsRepeater>
                                                </ScrollViewer>
                                            </muxc:ItemsRepeaterScrollHost>
                                        </Grid>
                                    </Grid>
                                </SplitView.Pane>

                                <SplitView.Content>
                                    <Grid
                                        x:Name="ContentGrid"
                                        Background="Transparent"
                                        Margin="{ThemeResource NavigationViewContentMargin}"
                                        v1809:CornerRadius="{ThemeResource NavigationViewContentGridCornerRadius}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid x:Name="ContentTopPadding"
                                            Grid.ColumnSpan="2"
                                            Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.LeftPaneVisibility}"/>

                                        <Grid x:Name="ContentLeftPadding" Grid.Row="1"/>

                                        <ContentControl
                                            x:Name="HeaderContent"
                                            Grid.Row="1"
                                            Grid.Column="1"
                                            MinHeight="{StaticResource PaneToggleButtonHeight}"
                                            IsTabStop="False"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Style="{StaticResource NavigationViewTitleHeaderContentControlTextStyle}"/>

                                        <ContentPresenter
                                            x:Name="ContentPresenter"
                                            AutomationProperties.LandmarkType="Main"
                                            Grid.Row="2"
                                            Grid.ColumnSpan="2"
                                            Content="{TemplateBinding Content}"
                                            Margin="{ThemeResource NavigationViewContentPresenterMargin}"/>
                                    </Grid>
                                </SplitView.Content>
                            </SplitView>

                            <Grid
                                x:Name="ShadowCaster"
                                Grid.RowSpan="2"
                                Width="{TemplateBinding OpenPaneLength}"
                                HorizontalAlignment="Left">
                                <Grid.RenderTransform>
                                    <CompositeTransform x:Name="ShadowCasterTransform" />
                                </Grid.RenderTransform>
                            </Grid>

                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="muxc:SplitButton" x:Key="SplitButtonStyleAccent">
        <Setter Property="Background" Value="{ThemeResource AccentButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource AccentButtonForeground}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
        <Setter Property="UseSystemFocusVisuals" Value="True" />
        <Setter Property="FocusVisualMargin" Value="-1" />
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Padding" Value="{ThemeResource ButtonPadding}"/>
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="muxc:SplitButton">
                    <Grid
                        x:Name="RootGrid"
                        Background="Transparent"
                        v1809:CornerRadius="{TemplateBinding CornerRadius}"
                        v1803:CornerRadius="{ThemeResource ControlCornerRadius}">

                        <Grid.Resources>
                            <!-- Override the style of the inner buttons so that they don't affect background/foreground/border colors -->
                            <Style TargetType="Button">
                                <Setter Property="Foreground" Value="{ThemeResource SplitButtonForeground}" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="BorderThickness" Value="{ThemeResource SplitButtonBorderThemeThickness}" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                <Setter Property="FocusVisualMargin" Value="-3" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Grid x:Name="RootGrid" Background="Transparent">

                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="PointerOver">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="PointerOver"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.(muxc:AnimatedIcon.State)" Value="Pressed"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled">
                                                            <VisualState.Setters>
                                                                <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource SplitButtonForegroundDisabled}"/>
                                                            </VisualState.Setters>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>

                                                <ContentPresenter x:Name="ContentPresenter"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTransitions="{TemplateBinding ContentTransitions}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    Padding="{TemplateBinding Padding}"
                                                    HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                    VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                    AutomationProperties.AccessibilityView="Raw"
                                                    muxc:AnimatedIcon.State="Normal"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <VisualState.Setters>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="FlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryButton.Background" Value="{ThemeResource AccentButtonBackgroundPressed}"/>
                                        <Setter Target="SecondaryButton.Background" Value="{ThemeResource AccentButtonBackgroundPressed}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="TouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="Transparent"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource AccentButtonForeground}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="PrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="Transparent"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="Transparent"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource AccentButtonForeground}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="SecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="Transparent"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedFlyoutOpen">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedTouchPressed">
                                    <VisualState.Setters>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}"/>
                                        <Setter Target="PrimaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedPrimaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPointerOver}"/>
                                        <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPointerOver}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="CheckedSecondaryPressed">
                                    <VisualState.Setters>
                                        <Setter Target="Border.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushChecked}"/>
                                        <Setter Target="PrimaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundChecked}"/>
                                        <Setter Target="PrimaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                        <Setter Target="SecondaryBackgroundGrid.Background" Value="{ThemeResource SplitButtonBackgroundCheckedPressed}"/>
                                        <Setter Target="SecondaryButton.BorderBrush" Value="{ThemeResource SplitButtonBorderBrushCheckedPressed}"/>
                                        <Setter Target="SecondaryButton.Foreground" Value="{ThemeResource SystemColorHighlightTextColor}"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="SecondaryButtonPlacementStates">
                                <VisualState x:Name="SecondaryButtonRight"/>

                                <VisualState x:Name="SecondaryButtonSpan">
                                    <VisualState.Setters>
                                        <Setter Target="SecondaryButton.(Grid.Column)" Value="0"/>
                                        <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="3"/>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="PrimaryButtonColumn" Width="*" MinWidth="{ThemeResource SplitButtonPrimaryButtonSize}"/>
                            <ColumnDefinition x:Name="Separator" Width="1" />
                            <ColumnDefinition x:Name="SecondaryButtonColumn" Width="{ThemeResource SplitButtonSecondaryButtonSize}"/>
                        </Grid.ColumnDefinitions>

                        <Grid x:Name="PrimaryBackgroundGrid"
                            Grid.ColumnSpan="2" />

                        <Grid x:Name="SecondaryBackgroundGrid"
                            Grid.Column="2"/>

                        <Button x:Name="PrimaryButton"
                            Grid.Column="0"
                            Grid.ColumnSpan="2"
                            Foreground="{ThemeResource AccentButtonForeground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1"
                            BorderBrush="{ThemeResource AccentButtonBorderBrush}"
                            Content="{TemplateBinding Content}"
                            ContentTransitions="{TemplateBinding ContentTransitions}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            Command="{TemplateBinding Command}"
                            CommandParameter="{TemplateBinding CommandParameter}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontWeight="{TemplateBinding FontWeight}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            Padding="{TemplateBinding Padding}"
                            IsTabStop="False"
                            Style="{ThemeResource SplitButtonAccentPartStyle}"
                            AutomationProperties.AccessibilityView="Raw"/>

                        <Button x:Name="SecondaryButton"
                            Grid.Column="2"
                            Foreground="{ThemeResource AccentButtonForeground}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0,1,1,1"
                            BorderBrush="{ThemeResource AccentButtonBorderBrush}"
                            HorizontalContentAlignment="Stretch"
                            VerticalContentAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Padding="0,0,12,0"
                            IsTabStop="False"
                            Style="{ThemeResource SplitButtonAccentPartStyle}"
                            AutomationProperties.AccessibilityView="Raw">
                            <Button.Content>
                                <muxc:AnimatedIcon Height="12" Width="12" VerticalAlignment="Center" HorizontalAlignment="Right" AutomationProperties.AccessibilityView="Raw">
                                    <animatedvisuals:AnimatedChevronDownSmallVisualSource/>
                                    <muxc:AnimatedIcon.FallbackIconSource>
                                        <muxc:FontIconSource FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                                              FontSize="8"
                                                              Glyph="&#xE96E;"
                                                              IsTextScaleFactorEnabled="False"/>
                                    </muxc:AnimatedIcon.FallbackIconSource>
                                </muxc:AnimatedIcon>
                            </Button.Content>
                        </Button>

                        <Grid x:Name="DividerBackgroundGrid"
                            Width="1"
                            Background="#20000000"
                            Grid.Column="1"/>

                        <Grid x:Name="Border"
                            Grid.ColumnSpan="3"
                            BorderBrush="{ThemeResource AccentButtonBorderBrush}"
                            BorderThickness="1"
                            v1809:CornerRadius="{TemplateBinding CornerRadius}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AppBarButtonStyleShallow" TargetType="AppBarButton">
        <Setter Property="Background" Value="{ThemeResource AppBarButtonBackground}" />
        <Setter Property="Foreground" Value="{ThemeResource AppBarButtonForeground}" />
        <Setter Property="BorderBrush" Value="{ThemeResource AppBarButtonBorderBrush}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Width" Value="32" />
        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
        <Setter Property="FocusVisualMargin" Value="-3" />
        <Setter Property="AllowFocusOnInteraction" Value="False" />
        <Setter Property="CornerRadius" Value="{ThemeResource ControlCornerRadius}" />
        <Setter Property="BackgroundSizing" Value="InnerBorderEdge" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="AppBarButton">
                    <Grid x:Name="Root"
                        Background="Transparent"
                        MinWidth="{TemplateBinding MinWidth}"
                        MaxWidth="{TemplateBinding MaxWidth}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ApplicationViewStates">
                                <VisualState x:Name="FullSize" />
                                <VisualState x:Name="Compact">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Margin" Value="{StaticResource AppBarButtonInnerBorderCompactMargin}" />
                                    </VisualState.Setters>

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LabelOnRight">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentViewbox" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarButtonContentViewboxMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentRoot" Storyboard.TargetProperty="MinHeight">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource AppBarThemeCompactHeight}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Row)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="(Grid.Column)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="TextAlignment">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Left" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource AppBarButtonTextLabelOnRightMargin}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SubItemChevron" Storyboard.TargetProperty="Margin">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="-7,20,12,0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="LabelCollapsed">

                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TextLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Overflow">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight" Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin" Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.Visibility" Value="Collapsed" />
                                        <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithToggleButtons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight" Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin" Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.Visibility" Value="Collapsed" />
                                        <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithMenuIcons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight" Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin" Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left" />
                                        <Setter Target="ContentViewbox.VerticalAlignment" Value="Center" />
                                        <Setter Target="ContentViewbox.Width" Value="16" />
                                        <Setter Target="ContentViewbox.Height" Value="16" />
                                        <Setter Target="ContentViewbox.Margin" Value="12,0,12,0" />
                                        <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin" Value="38,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowWithToggleButtonsAndMenuIcons">
                                    <VisualState.Setters>
                                        <Setter Target="ContentRoot.MinHeight" Value="0" />
                                        <Setter Target="AppBarButtonInnerBorder.Margin" Value="{StaticResource AppBarButtonInnerBorderOverflowMargin}" />
                                        <Setter Target="ContentViewbox.HorizontalAlignment" Value="Left" />
                                        <Setter Target="ContentViewbox.VerticalAlignment" Value="Center" />
                                        <Setter Target="ContentViewbox.Width" Value="16" />
                                        <Setter Target="ContentViewbox.Height" Value="16" />
                                        <Setter Target="ContentViewbox.Margin" Value="38,0,12,0" />
                                        <Setter Target="TextLabel.Visibility" Value="Collapsed" />
                                        <Setter Target="OverflowTextLabel.Visibility" Value="Visible" />
                                        <Setter Target="OverflowTextLabel.Margin" Value="76,0,12,0" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>

                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                        <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                        <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundDisabled}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushDisabled}" />
                                        <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                        <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                        <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundDisabled}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundDisabled}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowNormal"/>
                                <VisualState x:Name="OverflowPointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundPointerOver}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPointerOver}" />
                                        <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPointerOver}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPointerOver}" />
                                        <Setter Target="SubItemChevron.Foreground" Value="{ThemeResource AppBarButtonSubItemChevronForegroundPointerOver}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowPressed">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundPressed}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushPressed}" />
                                        <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundPressed}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundPressed}" />
                                        <Setter Target="SubItemChevron.Foreground" Value="{ThemeResource AppBarButtonSubItemChevronForegroundPressed}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="OverflowSubMenuOpened">
                                    <VisualState.Setters>
                                        <Setter Target="AppBarButtonInnerBorder.Background" Value="{ThemeResource AppBarButtonBackgroundSubMenuOpened}" />
                                        <Setter Target="AppBarButtonInnerBorder.BorderBrush" Value="{ThemeResource AppBarButtonBorderBrushSubMenuOpened}" />
                                        <Setter Target="Content.Foreground" Value="{ThemeResource AppBarButtonForegroundSubMenuOpened}" />
                                        <Setter Target="TextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundSubMenuOpened}" />
                                        <Setter Target="OverflowTextLabel.Foreground" Value="{ThemeResource AppBarButtonForegroundSubMenuOpened}" />
                                        <Setter Target="KeyboardAcceleratorTextLabel.Foreground" Value="{ThemeResource AppBarButtonKeyboardAcceleratorTextForegroundSubMenuOpened}" />
                                        <Setter Target="SubItemChevron.Foreground" Value="{ThemeResource AppBarButtonSubItemChevronForegroundSubMenuOpened}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InputModeStates">
                                <VisualState x:Name="InputModeDefault" />
                                <VisualState x:Name="TouchInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="OverflowTextLabel.Padding" Value="{ThemeResource AppBarButtonOverflowTextTouchMargin}" />
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="GameControllerInputMode">
                                    <VisualState.Setters>
                                        <Setter Target="OverflowTextLabel.Padding" Value="{ThemeResource AppBarButtonOverflowTextTouchMargin}" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="KeyboardAcceleratorTextVisibility">
                                <VisualState x:Name="KeyboardAcceleratorTextCollapsed" />
                                <VisualState x:Name="KeyboardAcceleratorTextVisible">
                                    <VisualState.Setters>
                                        <Setter Target="KeyboardAcceleratorTextLabel.Visibility" Value="Visible" />
                                    </VisualState.Setters>
                                </VisualState>

                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FlyoutStates">
                                <VisualState x:Name="NoFlyout" />
                                <VisualState x:Name="HasFlyout">
                                    <VisualState.Setters>
                                        <Setter Target="SubItemChevron.Visibility" Value="{ThemeResource AppBarButtonHasFlyoutChevronVisibility}" />
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="AppBarButtonInnerBorder"                                       
                                Margin="0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                BackgroundSizing="{TemplateBinding BackgroundSizing}"
                                Control.IsTemplateFocusTarget="True">

                            <Border.BackgroundTransition>
                                <BrushTransition Duration="0:0:0.083" />
                            </Border.BackgroundTransition>
                        </Border>

                        <Grid x:Name="ContentRoot"
                            MinHeight="0">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Viewbox x:Name="ContentViewbox"
                                Height="16"
                                Margin="6"
                                HorizontalAlignment="Stretch"
                                AutomationProperties.AccessibilityView="Raw" >
                                <ContentPresenter x:Name="Content"
                                    Content="{TemplateBinding Icon}"
                                    Foreground="{TemplateBinding Foreground}"/>
                            </Viewbox>
                            <TextBlock x:Name="TextLabel"
                                Grid.Row="1"
                                Text="{TemplateBinding Label}"
                                Foreground="{TemplateBinding Foreground}"
                                FontSize="12"
                                FontFamily="{TemplateBinding FontFamily}"
                                TextAlignment="Center"
                                TextWrapping="Wrap"
                                Margin="{ThemeResource AppBarButtonTextLabelMargin}"
                                AutomationProperties.AccessibilityView="Raw" />
                            <TextBlock x:Name="OverflowTextLabel"
                                Text="{TemplateBinding Label}"
                                Foreground="{TemplateBinding Foreground}"
                                FontSize="{ThemeResource ControlContentThemeFontSize}"
                                FontFamily="{TemplateBinding FontFamily}"
                                TextAlignment="Left"
                                TextTrimming="Clip"
                                TextWrapping="NoWrap"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Margin="12,0,12,0"
                                Padding="{ThemeResource AppBarButtonOverflowTextLabelPadding}"
                                Visibility="Collapsed"
                                AutomationProperties.AccessibilityView="Raw" />
                            <TextBlock x:Name="KeyboardAcceleratorTextLabel"
                                Grid.Column="1"
                                Style="{ThemeResource CaptionTextBlockStyle}"
                                Text="{TemplateBinding KeyboardAcceleratorTextOverride}"
                                MinWidth="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.KeyboardAcceleratorTextMinWidth}"
                                Margin="24,0,12,0"
                                Foreground="{ThemeResource AppBarButtonKeyboardAcceleratorTextForeground}"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Visibility="Collapsed"
                                AutomationProperties.AccessibilityView="Raw" />
                            <FontIcon x:Name="SubItemChevron"
                                Grid.Column="2"
                                Glyph="{ThemeResource AppBarButtonFlyoutGlyph}"
                                FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                FontSize="8"
                                AutomationProperties.AccessibilityView="Raw"
                                Foreground="{ThemeResource MenuFlyoutSubItemChevron}"
                                VerticalAlignment="Top"
                                Margin="-23,20,12,0"
                                MirroredWhenRightToLeft="True"
                                Visibility="Collapsed"/>

                        </Grid>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="AppBarButton" x:Key="AppBarButtonStyleCompact" BasedOn="{StaticResource DefaultAppBarButtonStyle}">
        <Setter Property="Width" Value="{StaticResource MTCMediaButtonWidth}"/>
    </Style>

    <Style TargetType="AppBarToggleButton" x:Key="AppBarToggleButtonStyleCompact" BasedOn="{StaticResource DefaultAppBarToggleButtonStyle}">
        <Setter Property="Width" Value="{StaticResource MTCMediaButtonWidth}"/>
    </Style>

    <RevealBackgroundBrush x:Key="ButtonAccentRevealBackgroundBrushPressed" Color="#8C8C8C" FallbackColor="{StaticResource SystemBaseMediumLowColor}" />

    <ResourceDictionary.ThemeDictionaries>
        <!-- HeaderScrollShadowConverter expects DropShadowPanelThemedStyle to set ShadowOpacity at index 0 -->
        <ResourceDictionary x:Key="Light">
            <Style x:Key="DropShadowPanelThemedStyle" TargetType="controls:DropShadowPanel">
                <Setter Property="ShadowOpacity" Value="0.15"/>
            </Style>
            <Brush x:Key="DisabledButtonBackgroundThemedStyle">#AEAEAE</Brush>
            <Brush x:Key="PressedButtonBackgroundThemedStyle">#656565</Brush>
            <Brush x:Key="CustomSeparatorBorderThemeBrush">#20000000</Brush>
            <SolidColorBrush x:Key="CustomGridViewItemSelectedBackgroundBrush" Color="{ThemeResource SystemListAccentLowColor}" Opacity="0.25"/>
        </ResourceDictionary>
        <ResourceDictionary x:Key="Dark">
            <Style x:Key="DropShadowPanelThemedStyle" TargetType="controls:DropShadowPanel">
                <Setter Property="ShadowOpacity" Value="0.3"/>
            </Style>
            <Brush x:Key="DisabledButtonBackgroundThemedStyle">#656565</Brush>
            <Brush x:Key="PressedButtonBackgroundThemedStyle">#656565</Brush>
            <Brush x:Key="CustomSeparatorBorderThemeBrush">#20FFFFFF</Brush>
            <SolidColorBrush x:Key="CustomGridViewItemSelectedBackgroundBrush" Color="{ThemeResource SystemListAccentLowColor}" Opacity="0.25"/>
        </ResourceDictionary>
        <ResourceDictionary x:Key="HighContrast">
            <Style x:Key="DropShadowPanelThemedStyle" TargetType="controls:DropShadowPanel">
                <Setter Property="ShadowOpacity" Value="0.3"/>
            </Style>
            <SolidColorBrush x:Key="DisabledButtonBackgroundThemedStyle" Color="{ThemeResource SystemColorGrayTextColor}"/>
            <SolidColorBrush x:Key="PressedButtonBackgroundThemedStyle" Color="{ThemeResource SystemColorGrayTextColor}"/>
            <SolidColorBrush x:Key="CustomSeparatorBorderThemeBrush" Color="{ThemeResource SystemColorWindowTextColor}"/>
            <SolidColorBrush x:Key="CustomGridViewItemSelectedBackgroundBrush" Color="Transparent"/>
        </ResourceDictionary>
    </ResourceDictionary.ThemeDictionaries>

</ResourceDictionary>
