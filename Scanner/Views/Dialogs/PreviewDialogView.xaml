<ContentDialog
    x:Class="Scanner.Views.Dialogs.PreviewDialogView"
    x:Name="RootContentDialog"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scanner.Views.Dialogs"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:helpers="using:Scanner.Helpers"
    xmlns:viewModels="using:Scanner.ViewModels"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:ui="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Scanner.Views.Converters"
    mc:Ignorable="d"
    Style="{ThemeResource DefaultContentDialogStyle}"
    CloseButtonText=""
    PrimaryButtonText=""
    FlowDirection="{x:Bind ViewModel.AccessibilityService.DefaultFlowDirection}"
    Closed="ContentDialog_Closed">

    <ContentDialog.DataContext>
        <viewModels:PreviewDialogViewModel x:Name="ViewModel"/>
    </ContentDialog.DataContext>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Loaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.ViewLoadedCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  RESOURCES  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <ContentDialog.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\..\StylesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Local Styles -->
            <Style x:Name="ImageCropperThumbStyleAcrylic" TargetType="controls:ImageCropperThumb">
                <Setter Property="Background" Value="{ThemeResource SliderThumbBackgroundThemeBrush}"/>
            </Style>

            <!-- XAML Converters -->
            <converters:NegativeBoolVisibilityConverter x:Key="NegativeBoolVisibilityConverter"/>
            <converters:ToolTipConverter x:Key="ToolTipConverter"/>
            <converters:AspectRatioOptionBoolConverter x:Key="AspectRatioOptionBoolConverter"/>
            <converters:DoubleStringConverter x:Key="DoubleStringConverter"/>
            
            <!-- Other -->
            <x:Double x:Key="ContentDialogMaxWidth">756</x:Double>
        </ResourceDictionary>
    </ContentDialog.Resources>

    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - -   DIALOG CONTENT   - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->   
    <Grid MinWidth="200" MinHeight="300" Margin="-24,-25,-24,-25" Background="{ThemeResource LayerFillColorDefaultBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="48" />
            <RowDefinition />
            <RowDefinition Height="58" />
        </Grid.RowDefinitions>
        
        <!-- Top Toolbar -->
        <Frame x:Name="FrameToolbar" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="0,0,0,1" CornerRadius="8,8,0,0">
            <StackPanel x:Name="StackPanelToolbarInitial" Orientation="Horizontal" HorizontalAlignment="Center">
                <StackPanel Orientation="Horizontal">
                    <TextBlock x:Uid="HeadingPreview" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center" FontWeight="SemiBold"/>
                    <AppBarSeparator Margin="16,0,12,0"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <AppBarToggleButton x:Name="ButtonToolbarSelectRegion" x:Uid="ButtonPreviewSelectRegion" LabelPosition="Collapsed" Style="{StaticResource AppBarToggleButtonStyleCompact}" IsChecked="{x:Bind ViewModel.IsCustomRegionSelected, Mode=TwoWay}" IsEnabled="{x:Bind ViewModel.HasPreviewSucceeded, Mode=OneWay}"  AutomationProperties.Name="{x:Bind ButtonToolbarSelectRegion, Converter={StaticResource ToolTipConverter}}">
                        <Grid Padding="0" Margin="0">
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEF20;" FontSize="16" />
                        </Grid>
                    </AppBarToggleButton>
                    <AppBarToggleButton x:Name="ToggleButtonToolbarAspectRatio" x:Uid="ButtonEditCropAspectRatio" Style="{ThemeResource AppBarToggleButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.IsCustomRegionSelected, Mode=OneWay}" IsChecked="{x:Bind ViewModel.IsFixedAspectRatioSelected, Mode=OneWay}" Click="ToggleButtonToolbarAspectRatio_Click" Checked="ToggleButtonToolbarAspectRatio_IsCheckedChanged" Unchecked="ToggleButtonToolbarAspectRatio_IsCheckedChanged" AutomationProperties.Name="{x:Bind ToggleButtonToolbarAspectRatio, Converter={StaticResource ToolTipConverter}}">
                        <AppBarToggleButton.Icon>
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE799;" FontSize="16"/>
                        </AppBarToggleButton.Icon>

                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout x:Name="MenuFlyoutAspectRatio" Placement="Bottom">
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioCustom" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=0}" FontWeight="SemiBold" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="0"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioSquare" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=1}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="1"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatio3by2" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=2}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="2"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatio4by3" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=3}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="3"/>
                                <MenuFlyoutItem x:Uid="ButtonEditCropAspectRatioFlip" Icon="Orientation" Click="MenuFlyoutItemCropAspectRatioFlip_Click"/>
                                <MenuFlyoutSeparator/>
                                <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioInternational" IsEnabled="False" FontWeight="SemiBold"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioInternationalDINA" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=4}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="4"/>
                                <MenuFlyoutSeparator/>
                                <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioNA" IsEnabled="False" FontWeight="SemiBold"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIA" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=5}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="5"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIB" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=6}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="6"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIC" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=7}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="7"/>
                                <MenuFlyoutSeparator/>
                                <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioChinese" IsEnabled="False" FontWeight="SemiBold"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai4" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=8}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="8"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai8" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=9}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="9"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai16" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=10}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="10"/>
                                <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai32" IsChecked="{x:Bind ViewModel.SelectedAspectRatio, Mode=OneWay, Converter={StaticResource AspectRatioOptionBoolConverter}, ConverterParameter=11}" Click="ToggleMenuFlyoutItemAspectRatio_Click" Tag="11"/>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </AppBarToggleButton>
                </StackPanel>
            </StackPanel>
        </Frame>

        <!-- Stretch ContentDialog -->
        <Border Grid.Row="1" Width="1000" Height="1000" Background="Transparent" />

        <!-- Content -->
        <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.IsCustomRegionSelected, Mode=OneWay, Converter={StaticResource NegativeBoolVisibilityConverter}}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <muxc:ProgressRing x:Name="ProgressRingPreview" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{x:Bind ViewModel.IsPreviewRunning, Mode=OneWay}"/>
            <controls:ImageEx Source="{x:Bind ViewModel.PreviewImage, Mode=OneWay}"/>
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{x:Bind ViewModel.HasPreviewFailed, Mode=OneWay}" Margin="24" MaxWidth="400">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <FontIcon Grid.Row="0" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE783;" FontSize="24" Foreground="{ThemeResource SystemErrorTextColor}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,12"/>
                <TextBlock Grid.Row="1" x:Uid="TextPreviewError" TextAlignment="Center" TextWrapping="WrapWholeWords" Style="{StaticResource BodyTextBlockStyle}"/>
            </Grid>
        </Grid>

        <Grid Grid.Row="1" Visibility="{x:Bind ViewModel.IsCustomRegionSelected, Mode=OneWay}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <controls:ImageCropper x:Name="ImageCropperPreview" AspectRatio="{x:Bind ViewModel.SelectedAspectRatioValue, Mode=OneWay}" PrimaryThumbStyle="{StaticResource ImageCropperThumbStyleAcrylic}" SecondaryThumbStyle="{StaticResource ImageCropperThumbStyleAcrylic}" CropShape="Rectangular" ThumbPlacement="All" Padding="32" Background="Transparent" ManipulationCompleted="ImageCropperPreview_ManipulationCompleted">
                <controls:ImageCropper.Mask>
                    <SolidColorBrush Color="Black" Opacity="0.5"/>
                </controls:ImageCropper.Mask>
            </controls:ImageCropper>
        </Grid>

        <!-- Footer -->
        <Frame x:Name="FrameFooter" Grid.Row="2" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource CardStrokeColorDefaultBrush}" BorderThickness="0,1,0,0" Padding="6,0,6,0" CornerRadius="0,0,8,8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="40">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" VerticalAlignment="Stretch" MinWidth="100" Margin="3,0,0,0" Style="{ThemeResource AccentButtonStyle}" Visibility="{x:Bind ViewModel.IsCustomRegionSelected, Mode=OneWay, Converter={StaticResource NegativeBoolVisibilityConverter}}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction TargetObject="{x:Bind RootContentDialog}" MethodName="Hide" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>
                            
                    <TextBlock Text="Done" Style="{StaticResource BodyTextBlockStyle}"/>
                </Button>

                <Button x:Name="ButtonApplySelection" Grid.Column="0" VerticalAlignment="Stretch" MinWidth="100" Margin="3,0,0,0" Style="{ThemeResource AccentButtonStyle}" Visibility="{x:Bind ViewModel.IsCustomRegionSelected, Mode=OneWay}">
                    <interactivity:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Click">
                            <core:CallMethodAction TargetObject="{x:Bind RootContentDialog}" MethodName="Hide" />
                        </core:EventTriggerBehavior>
                    </interactivity:Interaction.Behaviors>

                    <TextBlock Text="Apply selection" Style="{StaticResource BodyTextBlockStyle}"/>
                </Button>

                <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.HasPreviewSucceeded, Mode=OneWay}">
                    <AppBarSeparator/>
                    <controls:SwitchPresenter Padding="12,0,12,0">
                        <interactivity:Interaction.Behaviors>
                            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsCustomRegionSelected, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                                <core:ChangePropertyAction PropertyName="Value" Value="0"/>
                            </core:DataTriggerBehavior>
                            <core:DataTriggerBehavior Binding="{x:Bind ViewModel.IsCustomRegionSelected, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                                <core:ChangePropertyAction PropertyName="Value" Value="1"/>
                            </core:DataTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        
                        <controls:CaseCollection>
                            <controls:Case Value="0">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xECC6;" FontSize="16" Foreground="{ThemeResource DefaultTextForegroundThemeBrush}" />
                                    <TextBox Text="{x:Bind ViewModel.PreviewWidthInches, Mode=OneWay, Converter={StaticResource DoubleStringConverter}, ConverterParameter=2}" Background="Transparent" BorderBrush="Transparent" TextAlignment="Center" VerticalAlignment="Center" Margin="3,0,3,0" Padding="5,6,5,6" MinWidth="32" IsReadOnly="True" GotFocus="TextBox_GotFocus" />
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE947;" FontSize="10" Foreground="{ThemeResource DefaultTextForegroundThemeBrush}" VerticalAlignment="Center" />
                                    <TextBox Text="{x:Bind ViewModel.PreviewHeightInches, Mode=OneWay, Converter={StaticResource DoubleStringConverter}, ConverterParameter=2}" Background="Transparent" BorderBrush="Transparent" TextAlignment="Center" VerticalAlignment="Center" Margin="3,0,3,0" Padding="5,6,5,6" MinWidth="32" IsReadOnly="True" GotFocus="TextBox_GotFocus" />
                                    <TextBlock Text="in" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center" />
                                </StackPanel>
                            </controls:Case>
                            <controls:Case Value="1">
                                <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xECC6;" FontSize="16" Foreground="{ThemeResource SystemColorControlAccentBrush}"/>
                                    <TextBox Text="{x:Bind ViewModel.SelectedRegionWidthDisplay, Mode=TwoWay, Converter={StaticResource DoubleStringConverter}, ConverterParameter=2}" Background="Transparent" BorderBrush="Transparent" TextAlignment="Center" VerticalAlignment="Center" Margin="3,0,3,0" Padding="5,6,5,6" MinWidth="32" ui:TextBoxExtensions.Regex="^([0-9]{1,5})(([,.]{1})([0-9]{1,2}))?$" ui:TextBoxExtensions.ValidationMode="Dynamic" GotFocus="TextBox_GotFocus" KeyDown="TextBox_KeyDown" />
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE947;" FontSize="10" Foreground="{ThemeResource DefaultTextForegroundThemeBrush}" VerticalAlignment="Center" />
                                    <TextBox Text="{x:Bind ViewModel.SelectedRegionHeightDisplay, Mode=TwoWay, Converter={StaticResource DoubleStringConverter}, ConverterParameter=2}" Background="Transparent" BorderBrush="Transparent" TextAlignment="Center" VerticalAlignment="Center" Margin="3,0,3,0" Padding="5,6,5,6" MinWidth="32" ui:TextBoxExtensions.Regex="^([0-9]{1,5})(([,.]{1})([0-9]{1,2}))?$" ui:TextBoxExtensions.ValidationMode="Dynamic" GotFocus="TextBox_GotFocus" KeyDown="TextBox_KeyDown" />
                                    <TextBlock Text="in" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center" />
                                </StackPanel>
                            </controls:Case>
                        </controls:CaseCollection>
                    </controls:SwitchPresenter>
                </StackPanel>
            </Grid>
        </Frame>
    </Grid>

</ContentDialog>
