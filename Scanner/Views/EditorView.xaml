<Page
    x:Class="Scanner.Views.EditorView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scanner.Views"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewModels="using:Scanner.ViewModels"
    xmlns:scanner="using:Scanner"
    xmlns:converters="using:Scanner.Views.Converters"
    Background="Transparent"
    d:DesignWidth="350"
    d:DesignHeight="600"
    NavigationCacheMode="Required"
    
    Loaded="Page_Loaded">

    <Page.DataContext>
        <viewModels:EditorViewModel x:Name="ViewModel"/>
    </Page.DataContext>
    

    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  RESOURCES  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\StylesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- XAML Converters -->
            <converters:NotNullBoolConverter x:Key="NotNullBoolConverter"/>
            <converters:NotNullVisibilityConverter x:Key="NotNullVisibilityConverter"/>
            <converters:EditorModeIntConverter x:Key="EditorModeIntConverter"/>
            <converters:VisibilityOpacityConverter x:Key="VisibilityOpacityConverter"/>
            
            <!-- Storyboards -->
            <Storyboard x:Name="StoryboardToolbarIconDoneStart" Completed="StoryboardToolbarIconDoneStart_Completed" Duration="0:0:1.8">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="0.0" Duration="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="0.0" Duration="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="0.0" Duration="0:0:0.15" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="1.0" Duration="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="1.0" Duration="0:0:0.15" BeginTime="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="1.0" Duration="0:0:0.15" BeginTime="0:0:0.15">
                    <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
            </Storyboard>

            <Storyboard x:Name="StoryboardToolbarIconDoneFinish">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="1.0" Duration="0:0:0" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="1.0" Duration="0:0:0" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="1.0" Duration="0:0:0.15" BeginTime="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                 To="0.0" Duration="0:0:0.15" BeginTime="0:0:0"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleX)"
                                 To="0.0" Duration="0:0:0" BeginTime="0:0:0.15"/>
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.ScaleY)"
                                 To="0.0" Duration="0:0:0" BeginTime="0:0:0.15"/>
            </Storyboard>
        </ResourceDictionary>
    </Page.Resources>

    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  PAGE CONTENT  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <Grid>
        <!-- VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="NormalState">
                    <Storyboard>
                        
                    </Storyboard>

                    <VisualState.Setters>
                        
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="DisabledState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsScanResultChanging, Mode=OneWay}"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="FrameToolbar.IsEnabled" Value="False"/>
                        <Setter Target="FrameFooter.IsEnabled" Value="False"/>
                        <Setter Target="GridLoading.Visibility" Value="Visible"/>
                        <Setter Target="FlipViewPages.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="ScanningState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsScanning, Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    
                    <Storyboard>

                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="FrameToolbar.IsEnabled" Value="False"/>
                        <Setter Target="FrameFooter.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="EditingState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsEditing, Mode=OneWay}"/>
                    </VisualState.StateTriggers>

                    <Storyboard>

                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="FlipViewPages.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition/>
            <RowDefinition Height="58"/>
        </Grid.RowDefinitions>

        <!-- Top Toolbar -->
        <Frame x:Name="FrameToolbar" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="0,0,0,1" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                <controls:SwitchPresenter Value="{x:Bind ViewModel.EditorMode, Mode=OneWay, Converter={StaticResource EditorModeIntConverter}}">
                    <controls:SwitchPresenter.ContentTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition FromVerticalOffset="-32"/>
                        </TransitionCollection>
                    </controls:SwitchPresenter.ContentTransitions>

                    <controls:Case Value="0">
                        <StackPanel Orientation="Horizontal">
                            <!-- Crop -->
                            <AppBarButton x:Name="ButtonToolbarCrop" x:Uid="ButtonEditCrop" Command="{x:Bind ViewModel.EnterCropModeCommand}" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconCrop" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7A8;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconCropDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>
                            </AppBarButton>
                            <!-- Rotate -->
                            <AppBarButton x:Name="ButtonToolbarRotate" x:Uid="ButtonEditRotate" LabelPosition="Collapsed" Style="{ThemeResource AppBarButtonStyleChevron}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="1" RightTapped="AppBarButtonRotate_RightTapped">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconRotate" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7AD;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconRotateDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>

                                <FlyoutBase.AttachedFlyout>
                                    <MenuFlyout x:Name="MenuFlyoutButtonRotate" Placement="Bottom">
                                        <MenuFlyoutItem x:Uid="ButtonEditRotate90" FontWeight="SemiBold" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="1"/>
                                        <MenuFlyoutItem x:Uid="ButtonEditRotate180" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="2"/>
                                        <MenuFlyoutItem x:Uid="ButtonEditRotate270" Command="{x:Bind ViewModel.RotatePageCommand}" CommandParameter="3"/>
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                            </AppBarButton>
                            <!-- Draw -->
                            <AppBarButton x:Name="ButtonToolbarDraw" x:Uid="ButtonEditDraw" LabelPosition="Collapsed" Command="{x:Bind ViewModel.EnterDrawModeCommand}" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconDraw" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEDC6;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconDrawDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>
                            </AppBarButton>
                            <AppBarSeparator/>
                            <!-- Rename -->
                            <AppBarButton x:Name="ButtonToolbarRename" x:Uid="ButtonEditRename" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Click="ButtonToolbarRename_Click">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconRename" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE8AC;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconRenameDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>

                                <FlyoutBase.AttachedFlyout>
                                    <Flyout x:Name="FlyoutRename">
                                        <Grid MinWidth="250" MaxWidth="250">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <TextBlock Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Text="Rename" Style="{StaticResource BaseTextBlockStyle}"/>
                                            <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Text="Enter a new name for the file" Style="{StaticResource BodyTextBlockStyle}" Margin="0,0,0,12"/>

                                            <TextBox x:Name="TextBoxRename" Grid.Row="2" Grid.Column="0" KeyDown="TextBoxRename_KeyDown" Loaded="TextBoxRename_Loaded" HorizontalAlignment="Stretch"/>
                                            <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" Margin="6,0,0,0">
                                                <interactivity:Interaction.Behaviors>
                                                    <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ScanResult.IsImage, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                                                        <core:ChangePropertyAction PropertyName="Text" Value="{x:Bind ViewModel.SelectedPage.ScanFile.FileType, Mode=OneWay}"/>
                                                    </core:DataTriggerBehavior>
                                                    <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ScanResult.IsImage, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                                                        <core:ChangePropertyAction PropertyName="Text" Value="{x:Bind ViewModel.ScanResult.Pdf.FileType, Mode=OneWay}"/>
                                                    </core:DataTriggerBehavior>
                                                </interactivity:Interaction.Behaviors>
                                            </TextBlock>

                                            <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,16,0,0">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                
                                                <Button Grid.Column="0" Margin="0,0,3,0" HorizontalAlignment="Stretch" Content="Confirm" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.RenameCommand}" CommandParameter="{x:Bind TextBoxRename.Text, Mode=OneWay}" Click="ButtonRename_Click"/>
                                                <Button Grid.Column="1" Margin="3,0,0,0" HorizontalAlignment="Stretch" Content="Cancel" Click="ButtonRenameCancel_Click"/>
                                            </Grid>
                                        </Grid>
                                    </Flyout>
                                </FlyoutBase.AttachedFlyout>
                            </AppBarButton>
                            <!-- Delete -->
                            <AppBarButton x:Name="ButtonToolbarDelete" x:Uid="ButtonEditDelete" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Click="ButtonToolbarDelete_Click">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconDelete" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE74D;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconDeleteDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>

                                <FlyoutBase.AttachedFlyout>
                                    <Flyout x:Name="FlyoutDelete">
                                        <Grid MinWidth="250" MaxWidth="250">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Grid.Row="0" Grid.ColumnSpan="2" Text="Delete" Style="{StaticResource BaseTextBlockStyle}"/>
                                            <TextBlock Grid.Row="1" Grid.ColumnSpan="2" Text="Are you sure you want to delete this?" Style="{StaticResource BodyTextBlockStyle}" Margin="0,0,0,16"/>

                                            <Grid Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>

                                                <Button Grid.Column="0" Margin="0,0,3,0" HorizontalAlignment="Stretch" Content="Confirm" Style="{StaticResource AccentButtonStyle}" Command="{x:Bind ViewModel.DeleteCommand}" Click="ButtonDelete_Click"/>
                                                <Button Grid.Column="1" Margin="3,0,0,0" HorizontalAlignment="Stretch" Content="Cancel" Click="ButtonDeleteCancel_Click"/>
                                            </Grid>
                                        </Grid>
                                    </Flyout>
                                </FlyoutBase.AttachedFlyout>
                            </AppBarButton>
                            <AppBarSeparator/>
                            <!-- Copy -->
                            <AppBarButton x:Uid="ButtonEditCopy" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Command="{x:Bind ViewModel.CopyCommand}">
                                <Grid Padding="0" Margin="0">
                                    <FontIcon x:Name="FontIconCopy" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE8C8;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="1" ScaleY="1"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                    <FontIcon x:Name="FontIconCopyDone" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEC61;" FontSize="16" RenderTransformOrigin="0.5,0.5">
                                        <FontIcon.RenderTransform>
                                            <CompositeTransform ScaleX="0" ScaleY="0"/>
                                        </FontIcon.RenderTransform>
                                    </FontIcon>
                                </Grid>
                            </AppBarButton>
                            <!-- Open with -->
                            <AppBarButton x:Name="ButtonToolbarOpenWith" x:Uid="ButtonEditOpenWith" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Click="ButtonToolbarOpenWith_Click">
                                <AppBarButton.Icon>
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7AC;"/>
                                </AppBarButton.Icon>

                                <FlyoutBase.AttachedFlyout>
                                    <MenuFlyout x:Name="MenuFlyoutButtonOpenWith" Placement="Bottom" Opening="MenuFlyoutButtonOpenWith_Opening">
                                        <MenuFlyoutItem x:Name="MenuFlyoutItemStore" Text="Find more apps in the Store" Command="{x:Bind ViewModel.OpenWithCommand}" CommandParameter="-2">
                                            <MenuFlyoutItem.Icon>
                                                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE719;" FontSize="16"/>
                                            </MenuFlyoutItem.Icon>
                                        </MenuFlyoutItem>
                                        <MenuFlyoutSeparator/>
                                        <MenuFlyoutItem x:Name="MenuFlyoutItemAllApps" Text="Show all apps" FontWeight="SemiBold" Command="{x:Bind ViewModel.OpenWithCommand}" CommandParameter="-1"/>
                                    </MenuFlyout>
                                </FlyoutBase.AttachedFlyout>
                            </AppBarButton>
                            <!-- Share -->
                            <AppBarButton x:Name="ButtonToolbarShare" x:Uid="ButtonEditShare" LabelPosition="Collapsed" Style="{StaticResource AppBarButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}" Command="{x:Bind ViewModel.ShareCommand}">
                                <AppBarButton.Icon>
                                    <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE72D;"/>
                                </AppBarButton.Icon>
                            </AppBarButton>
                        </StackPanel>
                    </controls:Case>

                    <controls:Case Value="1">
                        
                    </controls:Case>

                    <controls:Case Value="2">

                    </controls:Case>
                </controls:SwitchPresenter>

                <!-- Dynamic content -->
                <controls:SwitchPresenter Value="{x:Bind ViewModel.EditorMode, Mode=OneWay, Converter={StaticResource EditorModeIntConverter}}">
                    <!-- Initial -->
                    <controls:Case Value="0">

                    </controls:Case>

                    <!-- Crop -->
                    <controls:Case Value="1">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal" Padding="12,3,12,3" Margin="0,6,6,6" Background="{ThemeResource SystemControlBackgroundListLowBrush}" CornerRadius="{StaticResource ControlCornerRadius}">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="-16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>
                                
                                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7A8;" FontSize="16" Margin="0,0,12,0"/>
                                <TextBlock Text="Crop" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="6,0,0,0">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>
                                
                                <AppBarToggleButton Style="{ThemeResource AppBarToggleButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}">
                                    <AppBarToggleButton.Icon>
                                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE799;" FontSize="16"/>
                                    </AppBarToggleButton.Icon>

                                    <FlyoutBase.AttachedFlyout>
                                        <MenuFlyout x:Name="MenuFlyoutAspectRatio" Placement="Top">
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioCustom" IsChecked="True" FontWeight="SemiBold"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioSquare" Tag="1"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatio3by2" Tag="0.6666"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatio4by3" Tag="0.7500"/>
                                            <MenuFlyoutItem x:Uid="ButtonEditCropAspectRatioFlip" Icon="Orientation"/>
                                            <MenuFlyoutSeparator/>
                                            <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioInternational" IsEnabled="False" FontWeight="SemiBold"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioInternationalDINA" Tag="1.4142"/>
                                            <MenuFlyoutSeparator/>
                                            <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioNA" IsEnabled="False" FontWeight="SemiBold"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIA" Tag="1.2941"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIB" Tag="1.5455"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioNAANSIC" Tag="1.2941"/>
                                            <MenuFlyoutSeparator/>
                                            <ToggleMenuFlyoutItem x:Uid="HeadingEditCropAspectRatioChinese" IsEnabled="False" FontWeight="SemiBold"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai4" Tag="1.3894"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai8" Tag="1.4230"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai16" Tag="1.4054"/>
                                            <ToggleMenuFlyoutItem x:Uid="ButtonEditCropAspectRatioChineseKai32" Tag="1.4230"/>
                                        </MenuFlyout>
                                    </FlyoutBase.AttachedFlyout>
                                </AppBarToggleButton>
                            </StackPanel>
                        </StackPanel>
                    </controls:Case>

                    <!-- Draw -->
                    <controls:Case Value="2">
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal" Padding="12,3,12,3" Margin="0,6,6,6" Background="{ThemeResource SystemControlBackgroundListLowBrush}" CornerRadius="{StaticResource ControlCornerRadius}">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="-16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>
                                
                                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEDC6;" FontSize="16" Margin="0,0,12,0"/>
                                <TextBlock Text="Draw" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="6,0,0,0">
                                <StackPanel.Transitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition FromHorizontalOffset="16" FromVerticalOffset="0"/>
                                    </TransitionCollection>
                                </StackPanel.Transitions>
                                
                                <InkToolbar InitialControls="PensOnly">
                                    <InkToolbarEraserButton/>
                                </InkToolbar>
                            </StackPanel>
                        </StackPanel>
                    </controls:Case>
                </controls:SwitchPresenter>
            </StackPanel>
        </Frame>

        <!-- Content -->
        <Grid x:Name="GridContent" Grid.Row="1">
            <FlipView x:Name="FlipViewPages" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" CornerRadius="0" Style="{StaticResource FlipViewStyleRoundedButtons}" ItemsSource="{x:Bind ViewModel.ScanResult.Elements, Mode=OneWay}" SelectedItem="{x:Bind ViewModel.SelectedPage, Mode=TwoWay}" SelectedIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=TwoWay}">
                <FlipView.ItemTemplate>
                    <DataTemplate x:DataType="scanner:ScanResultElement">
                        <ScrollViewer
                                x:Name="ScrollViewerFlipViewPages"
                                ZoomMode="Enabled"
                                MinZoomFactor="1"
                                MaxZoomFactor="2.5"
                                HorizontalScrollBarVisibility="Auto"
                                VerticalScrollBarVisibility="Auto"
                                ZoomSnapPointsType="Mandatory">
                            <controls:ImageEx Source="{x:Bind CachedImage, Mode=OneWay}" Loaded="ImageEx_Loaded"/>
                        </ScrollViewer>
                    </DataTemplate>
                </FlipView.ItemTemplate>
            </FlipView>

            <Grid x:Name="GridLoading" Visibility="Collapsed">
                <Ellipse Fill="{ThemeResource SystemControlAcrylicElementBrush}" Width="60" Height="60"/>
                <muxc:ProgressRing x:Name="ProgressRingLoading" Width="50" Height="50"/>
            </Grid>
        </Grid>

        <!-- Footer -->
        <Frame x:Name="FrameFooter" Grid.Row="2" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="0,1,0,0" Padding="6,0,6,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  Visibility="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullVisibilityConverter}}">
            <controls:SwitchPresenter Value="{x:Bind ViewModel.EditorMode, Mode=OneWay, Converter={StaticResource EditorModeIntConverter}}" HorizontalContentAlignment="Stretch">
                <controls:SwitchPresenter.ContentTransitions>
                    <TransitionCollection>
                        <EntranceThemeTransition FromVerticalOffset="32"/>
                    </TransitionCollection>
                </controls:SwitchPresenter.ContentTransitions>

                <!-- Initial -->
                <controls:Case Value="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Grid.Column="0" Orientation="Horizontal" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullVisibilityConverter}}">
                            <TextBlock x:Name="TextBlockPageIndicator" Text="{x:Bind ViewModel.SelectedPageText, Mode=OneWay}" Style="{StaticResource BodyTextBlockStyle}" VerticalAlignment="Center" TextAlignment="Left" MaxLines="1" Padding="12,0,12,0" Visibility="{x:Bind FlipViewPages.Visibility, Mode=OneWay}"/>
                            <AppBarSeparator Visibility="{x:Bind TextBlockPageIndicator.Visibility, Mode=OneWay}"/>
                        </StackPanel>

                        <muxc:PipsPager Grid.Column="1" MaxVisiblePips="10" NumberOfPages="{x:Bind ViewModel.ScanResult.Elements.Count, Mode=OneWay, FallbackValue=0}" SelectedPageIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" PreviousButtonVisibility="VisibleOnPointerOver" NextButtonVisibility="VisibleOnPointerOver" SelectedIndexChanged="PipsPager_SelectedIndexChanged"/>

                        <StackPanel Grid.Column="2" Orientation="Horizontal" VerticalAlignment="Stretch" Visibility="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullVisibilityConverter}}">
                            <AppBarSeparator Visibility="{x:Bind TextBlockPageIndicator.Visibility, Mode=OneWay}"/>
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch">
                                <TextBlock x:Name="TextBlockZoomFactor" Style="{StaticResource BodyTextBlockStyle}" Text="100 %" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" MaxLines="1" MinWidth="60">
                                    <interactivity:Interaction.Behaviors>
                                        <core:DataTriggerBehavior Binding="{x:Bind FrameFooter.IsEnabled, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                                            <core:ChangePropertyAction PropertyName="Foreground" Value="{ThemeResource DefaultTextForegroundThemeBrush}"/>
                                        </core:DataTriggerBehavior>
                                        <core:DataTriggerBehavior Binding="{x:Bind FrameFooter.IsEnabled, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                                            <core:ChangePropertyAction PropertyName="Foreground" Value="{ThemeResource SystemColorDisabledTextBrush}"/>
                                        </core:DataTriggerBehavior>
                                    </interactivity:Interaction.Behaviors>
                                </TextBlock>
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <AppBarButton x:Name="ButtonZoomIn" LabelPosition="Collapsed" IsEnabled="True" Style="{StaticResource AppBarButtonStyleShallow}" Padding="0">
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE710;" FontSize="16"/>
                                    </AppBarButton>
                                    <AppBarButton x:Name="ButtonZoomOut" LabelPosition="Collapsed" IsEnabled="True" Style="{StaticResource AppBarButtonStyleShallow}" Padding="0">
                                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE738;" FontSize="16"/>
                                    </AppBarButton>
                                </StackPanel>
                            </StackPanel>
                        </StackPanel>
                    </Grid>

                </controls:Case>

                <!-- Crop -->
                <controls:Case Value="1">
                    <Frame HorizontalAlignment="Center" VerticalAlignment="Center" Height="40">
                        <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            
                            <Button Grid.Column="0" VerticalAlignment="Stretch" Margin="0,0,6,0">
                                <Grid Padding="6,0,6,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <FontIcon Grid.Column="0" Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xF168;" FontSize="16" Margin="0,0,12,0"/>
                                    <TextBlock Grid.Column="1" Text="Crop similar pages" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                </Grid>
                            </Button>
                            <AppBarSeparator Grid.Column="1"/>
                            <Button Grid.Column="2" x:Uid="ButtonEditSave" Style="{ThemeResource AccentButtonStyle}" VerticalAlignment="Stretch" Margin="6,0,3,0">
                                <Grid>
                                    <StackPanel Orientation="Horizontal" Margin="6,0,6,0" VerticalAlignment="Center">
                                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE74E;" FontSize="16" Margin="0,0,12,0"/>
                                        <TextBlock x:Uid="TextEditSave" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Button>
                            <Button Grid.Column="3" x:Uid="ButtonEditSaveCopy" VerticalAlignment="Stretch" Margin="3,0,3,0" Command="{x:Bind ViewModel.LeaveCropModeCommand}">
                                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEA35;" FontSize="16"/>
                            </Button>
                            <Button Grid.Column="4" x:Uid="ButtonEditDiscard" VerticalAlignment="Stretch" Margin="3,0,0,0" Command="{x:Bind ViewModel.LeaveCropModeCommand}">
                                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE711;" FontSize="16"/>
                            </Button>
                        </Grid>
                    </Frame>
                </controls:Case>

                <!-- Draw -->
                <controls:Case Value="2">
                    <Frame HorizontalAlignment="Center" VerticalAlignment="Center" Height="40">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Right">
                            <Button x:Uid="ButtonEditSave" Style="{ThemeResource AccentButtonStyle}" VerticalAlignment="Stretch" Margin="3,0,3,0">
                                <Grid>
                                    <StackPanel Orientation="Horizontal" Margin="6,0,6,0" VerticalAlignment="Center">
                                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE74E;" FontSize="16" Margin="0,0,12,0"/>
                                        <TextBlock x:Uid="TextEditSave" Style="{ThemeResource BodyTextBlockStyle}" VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Button>
                            <Button x:Uid="ButtonEditSaveCopy" VerticalAlignment="Stretch" Margin="3,0,3,0" Command="{x:Bind ViewModel.LeaveCropModeCommand}">
                                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEA35;" FontSize="16"/>
                            </Button>
                            <Button x:Uid="ButtonEditDiscard" VerticalAlignment="Stretch" Margin="3,0,0,0" Command="{x:Bind ViewModel.LeaveCropModeCommand}">
                                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE711;" FontSize="16"/>
                            </Button>
                        </StackPanel>
                    </Frame>
                </controls:Case>
            </controls:SwitchPresenter>
        </Frame>
    </Grid>
</Page>
