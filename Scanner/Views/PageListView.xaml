<Page
    x:Class="Scanner.Views.PageListView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scanner.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:viewModels="using:Scanner.ViewModels"
    xmlns:converters="using:Scanner.Views.Converters"
    xmlns:scanner="using:Scanner"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    Background="Transparent"
    d:DesignWidth="350"
    d:DesignHeight="600"
    
    Loaded="Page_Loaded">

    <Page.DataContext>
        <viewModels:PageListViewModel x:Name="ViewModel"/>
    </Page.DataContext>

    <interactivity:Interaction.Behaviors>
        <core:EventTriggerBehavior EventName="Unloaded">
            <core:InvokeCommandAction Command="{x:Bind ViewModel.DisposeCommand}"/>
        </core:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  RESOURCES  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\StylesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- XAML Converters -->
            <converters:NotNullBoolConverter x:Key="NotNullBoolConverter"/>
            <converters:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>
            <converters:NegativeBoolVisibilityConverter x:Key="NegativeBoolVisibilityConverter"/>
        </ResourceDictionary>
    </Page.Resources>

    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  PAGE CONTENT  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <Grid>
        <!-- VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="NormalState">
                    <Storyboard>
                        
                    </Storyboard>

                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="DisabledState">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsScanRunning, Mode=OneWay}"/>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsScanResultChanging, Mode=OneWay}"/>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsEditorEditing, Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    
                    <Storyboard>

                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="GridViewPages.IsEnabled" Value="False"/>
                        <Setter Target="FrameToolbar.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="48"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <Grid Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource NavigationViewContentBackground}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="0,0,0,1" CornerRadius="8,8,0,0">
            <Frame x:Name="FrameToolbar">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <AppBarToggleButton x:Name="AppBarToggleButtonSelect" x:Uid="ButtonManageSelect" LabelPosition="Collapsed" Style="{StaticResource AppBarToggleButtonStyleCompact}" IsEnabled="{x:Bind ViewModel.ScanResult, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}}">
                        <AppBarToggleButton.Icon>
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE762;"/>
                        </AppBarToggleButton.Icon>
                    </AppBarToggleButton>
                    <AppBarSeparator/>
                    <AppBarButton x:Uid="ButtonManageRotate" LabelPosition="Collapsed" IsEnabled="{x:Bind ViewModel.SelectedPages, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}, FallbackValue=False}" Style="{ThemeResource AppBarButtonStyleChevron}" RightTapped="AppBarButtonRotate_RightTapped">
                        <AppBarButton.Icon>
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE7AD;"/>
                        </AppBarButton.Icon>

                        <FlyoutBase.AttachedFlyout>
                            <MenuFlyout x:Name="MenuFlyoutButtonLeftPaneManageRotate" Placement="Bottom">
                                <MenuFlyoutItem x:Uid="ButtonManageRotate90" FontWeight="Bold"/>
                                <MenuFlyoutItem x:Uid="ButtonManageRotate180"/>
                                <MenuFlyoutItem x:Uid="ButtonManageRotate270"/>
                            </MenuFlyout>
                        </FlyoutBase.AttachedFlyout>
                    </AppBarButton>
                    <AppBarButton x:Uid="ButtonManageDelete" LabelPosition="Collapsed" IsEnabled="{x:Bind ViewModel.SelectedPages, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}, FallbackValue=False}" Style="{StaticResource AppBarButtonStyleCompact}">
                        <AppBarButton.Icon>
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE74D;"/>
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton x:Uid="ButtonManageCopy" LabelPosition="Collapsed" IsEnabled="{x:Bind ViewModel.SelectedPages, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}, FallbackValue=False}" Style="{StaticResource AppBarButtonStyleCompact}">
                        <AppBarButton.Icon>
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE8C8;"/>
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton x:Uid="ButtonManageShare" LabelPosition="Collapsed" IsEnabled="{x:Bind ViewModel.SelectedPages, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}, FallbackValue=False}" Style="{StaticResource AppBarButtonStyleCompact}">
                        <AppBarButton.Icon>
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE72D;"/>
                        </AppBarButton.Icon>
                    </AppBarButton>
                    <AppBarButton x:Uid="ButtonManagePrint" LabelPosition="Collapsed" IsEnabled="{x:Bind ViewModel.SelectedPages, Mode=OneWay, Converter={StaticResource NotNullBoolConverter}, FallbackValue=False}" Style="{StaticResource AppBarButtonStyleCompact}">
                        <AppBarButton.Icon>
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE749;"/>
                        </AppBarButton.Icon>
                    </AppBarButton>
                </StackPanel>
            </Frame>
        </Grid>

        <!-- Content -->
        <Grid Grid.Row="1">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" RelativePanel.AlignHorizontalCenterWithPanel="True" RelativePanel.AlignVerticalCenterWithPanel="True">
                <interactivity:Interaction.Behaviors>
                    <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ScanResult, Mode=OneWay}" ComparisonCondition="Equal" Value="{x:Null}">
                        <core:ChangePropertyAction PropertyName="Visibility" Value="Visible"/>
                    </core:DataTriggerBehavior>
                    <core:DataTriggerBehavior Binding="{x:Bind ViewModel.ScanResult, Mode=OneWay}" ComparisonCondition="NotEqual" Value="{x:Null}">
                        <core:ChangePropertyAction PropertyName="Visibility" Value="Collapsed"/>
                    </core:DataTriggerBehavior>
                </interactivity:Interaction.Behaviors>
                
                <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE81E;" Margin="8,8,8,16" FontSize="72" Foreground="{ThemeResource SystemColorGrayTextColor}"/>
                <TextBlock x:Uid="TextManageInitialPlaceholder" Margin="8,0,8,0" Style="{ThemeResource BodyTextBlockStyle}" Foreground="{ThemeResource SystemColorGrayTextColor}"/>
            </StackPanel>

            <ScrollViewer x:Name="ScrollViewerPages" VerticalScrollBarVisibility="Auto">
                <GridView x:Name="GridViewPages" Margin="24,16,24,24" ScrollViewer.VerticalScrollMode="Disabled" ItemsSource="{x:Bind ViewModel.ScanResult.Elements, Mode=OneWay}" SelectedIndex="{x:Bind ViewModel.SelectedPageIndex, Mode=TwoWay}" IsItemClickEnabled="True" SelectionMode="Single" CanReorderItems="True" CanDragItems="True" AllowDrop="True" SelectionChanged="GridViewPages_SelectionChanged">
                    <interactivity:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{x:Bind AppBarToggleButtonSelect.IsChecked, Mode=OneWay}" ComparisonCondition="Equal" Value="False">
                            <core:ChangePropertyAction PropertyName="SelectedIndex" Value="{x:Bind ViewModel.SelectedPageIndex, Mode=TwoWay}"/>
                            <!--<core:ChangePropertyAction PropertyName="SelectedItems" Value="{x:Null}"/>-->
                            <core:ChangePropertyAction PropertyName="SelectionMode" Value="Single"/>
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{x:Bind AppBarToggleButtonSelect.IsChecked, Mode=OneWay}" ComparisonCondition="Equal" Value="True">
                            <core:ChangePropertyAction PropertyName="SelectedIndex" Value=""/>
                            <!--<core:ChangePropertyAction PropertyName="SelectedItems" Value="{x:Bind ViewModel.SelectedPages, Mode=TwoWay}"/>-->
                            <core:ChangePropertyAction PropertyName="SelectionMode" Value="Multiple"/>
                        </core:DataTriggerBehavior>
                    </interactivity:Interaction.Behaviors>

                    <GridView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <ItemsWrapGrid MaximumRowsOrColumns="2" Orientation="Horizontal" SizeChanged="ItemsWrapGrid_SizeChanged"/>
                        </ItemsPanelTemplate>
                    </GridView.ItemsPanel>

                    <GridView.ItemContainerTransitions>
                        <TransitionCollection>
                            <AddDeleteThemeTransition/>
                            <ReorderThemeTransition/>
                            <EntranceThemeTransition FromHorizontalOffset="0" FromVerticalOffset="0"/>
                        </TransitionCollection>
                    </GridView.ItemContainerTransitions>

                    <GridView.ItemTemplate>
                        <DataTemplate x:DataType="scanner:ScanResultElement">
                            <GridViewItem x:Name="GridViewItemPage" Margin="4" Style="{ThemeResource DefaultGridViewItemStyle}" AutomationProperties.Name="{Binding ItemDescriptor}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                                <Grid>
                                    <!-- Selected Item Background -->
                                    <Border Background="{ThemeResource NavigationViewContentBackground}" Visibility="{Binding ElementName=GridViewItemPage, Path=IsSelected, Converter={StaticResource BoolVisibilityConverter}}"/>

                                    <Image Source="{x:Bind Thumbnail}"/>
                                    
                                    <!-- Selected Item -->
                                    <Border BorderBrush="{ThemeResource ToolTipBorderBrush}" BorderThickness="1" Background="{ThemeResource AccentButtonBackground}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6" CornerRadius="{StaticResource ControlCornerRadius}" Visibility="{Binding ElementName=GridViewItemPage, Path=IsSelected, Converter={StaticResource BoolVisibilityConverter}}">
                                        <TextBlock Text="{x:Bind ItemDescriptor, Mode=OneWay}" Margin="8,3,8,6" Foreground="{ThemeResource AccentButtonForeground}" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="WrapWholeWords" FontWeight="SemiBold" MaxLines="1" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                    </Border>
                                    
                                    <!-- Normal Item -->
                                    <Border BorderBrush="{ThemeResource ToolTipBorderBrush}" BorderThickness="1" Background="{ThemeResource SystemControlAcrylicElementMediumHighBrush}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="6" CornerRadius="{StaticResource ControlCornerRadius}" Visibility="{Binding ElementName=GridViewItemPage, Path=IsSelected, Converter={StaticResource NegativeBoolVisibilityConverter}}">
                                        <TextBlock Text="{x:Bind ItemDescriptor, Mode=OneWay}" Margin="8,3,8,6" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="WrapWholeWords" MaxLines="1" TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
                                    </Border>
                                </Grid>
                            </GridViewItem>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>
            </ScrollViewer>
        </Grid>
    </Grid>
</Page>
