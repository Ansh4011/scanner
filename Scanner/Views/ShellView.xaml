<Page
    x:Class="Scanner.Views.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Scanner"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:viewModels="using:Scanner.ViewModels"
    xmlns:converters="using:Scanner.Views.Converters"
    xmlns:muxcWindows11Present="using:Microsoft.UI.Xaml.Controls?IsApiContractPresent(Windows.Foundation.UniversalApiContract, 14)"
    xmlns:windows11NotPresent="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractNotPresent(Windows.Foundation.UniversalApiContract, 14)"
    xmlns:dialogs="using:Scanner.Views.Dialogs"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core" xmlns:messenger="using:Scanner.Services.Messenger"
    muxcWindows11Present:BackdropMaterial.ApplyToRootOrPageBackground="True"
    windows11NotPresent:Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    d:DesignWidth="800"
    d:DesignHeight="600"
    
    Loaded="Page_Loaded">

    <Page.DataContext>
        <viewModels:ShellViewModel x:Name="ViewModel"/>
    </Page.DataContext>


    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  RESOURCES  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -->
    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="..\StylesDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- XAML Converters -->
            <converters:WindowStateOpacityConverter x:Key="WindowStateOpacityConverter"/>
            <converters:ScanSaveLocationGlyphConverter x:Key="ScanSaveLocationGlyphConverter"/>
            <converters:AppWideMessageSeverityInfoBarConverter x:Key="AppWideMessageSeverityInfoBarConverter"/>
            <converters:StringNotEmptyVisibilityConverter x:Key="StringNotEmptyVisibilityConverter"/>
            <converters:NotZeroVisibilityConverter x:Key="NotZeroVisibilityConverter"/>
            <converters:VisibilityOpacityConverter x:Key="VisibilityOpacityConverter"/>
            
            <!-- Storyboards -->
            <Storyboard x:Key="StoryboardInfoBarEnter">
                <DoubleAnimation Storyboard.TargetName="InfoBarAppWideMessages" Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)"
                                 From="100" To="0" Duration="0:0:0.3" BeginTime="0:0:0">
                    <DoubleAnimation.EasingFunction>
                        <ExponentialEase Exponent="4.5" EasingMode="EaseOut"/>
                    </DoubleAnimation.EasingFunction>
                </DoubleAnimation>
                <DoubleAnimation Storyboard.TargetName="InfoBarAppWideMessages" Storyboard.TargetProperty="Opacity"
                                 From="0.0" To="1.0" Duration="0:0:0.3" BeginTime="0:0:0"/>
            </Storyboard>
        </ResourceDictionary>
    </Page.Resources>

    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - -  PAGE CONTENT  - - - - - - - - - - - - - - - - -->
    <!-- - - - - - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - -->
    <Grid x:Name="GridMain" FlowDirection="{x:Bind ViewModel.AccessibilityService.DefaultFlowDirection}" SizeChanged="GridMain_SizeChanged">
        <!-- VisualStates -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup" CurrentStateChanging="VisualStateGroup_CurrentStateChanging">
                <VisualState x:Name="NarrowStateEditor">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind NavigationViewItemMainEditor.IsSelected, Mode=OneWay}"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainEditor" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="ColumnMainContentSecond.MaxWidth" Value="775"/>
                        <Setter Target="ColumnMainContentFirst.Width" Value="0"/>
                        <Setter Target="ColumnMainContentFirst.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MaxWidth" Value="0"/>
                        <Setter Target="NavigationViewMain.PaneDisplayMode" Value="Top"/>
                        <Setter Target="GridMainContent.Padding" Value="0"/>
                        <Setter Target="NavigationViewItemMainEditor.IsEnabled" Value="True"/>
                        <Setter Target="FrameMainContentFirst.Content" Value="{x:Null}"/>
                        <Setter Target="FrameMainContentSecond.CornerRadius" Value="8,8,0,0"/>
                        <Setter Target="FrameMainContentSecond.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="FrameMainContentSecond.Margin" Value="0"/>
                        <Setter Target="FrameMainContentThird.Content" Value="{x:Null}"/>
                        <Setter Target="InfoBarAppWideMessages.Margin" Value="0,-1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.CornerRadius" Value="0,0,8,8"/>
                    </VisualState.Setters>
                </VisualState>
                
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainEditor" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="ColumnMainContentFirst.MaxWidth" Value="775"/>
                        <Setter Target="ColumnMainContentSecond.Width" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MaxWidth" Value="0"/>
                        <Setter Target="NavigationViewMain.PaneDisplayMode" Value="Top"/>
                        <Setter Target="GridMainContent.Padding" Value="0"/>
                        <Setter Target="NavigationViewItemMainEditor.IsEnabled" Value="True"/>
                        <Setter Target="FrameMainContentFirst.CornerRadius" Value="8,8,0,0"/>
                        <Setter Target="FrameMainContentFirst.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="FrameMainContentSecond.Content" Value="{x:Null}"/>
                        <Setter Target="FrameMainContentThird.Content" Value="{x:Null}"/>
                        <Setter Target="InfoBarAppWideMessages.Margin" Value="0,-1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.BorderThickness" Value="0,1,0,0"/>
                        <Setter Target="InfoBarAppWideMessages.CornerRadius" Value="0,0,8,8"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="DefaultState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="AdaptiveTriggerDefaultState" MinWindowWidth="775"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="0">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="ColumnMainContentSecond.Width" Value="7*"/>
                        <Setter Target="ColumnMainContentThird.MinWidth" Value="0"/>
                        <Setter Target="ColumnMainContentThird.MaxWidth" Value="0"/>
                        <Setter Target="NavigationViewItemMainEditor.(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Value="50"/>
                        <Setter Target="FrameMainContentThird.Content" Value="{x:Null}"/>
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1750"/>
                    </VisualState.StateTriggers>

                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainEditor" Duration="0:0:0.15" To="50">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseIn"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)"
                             Storyboard.TargetName="NavigationViewItemMainPageList" Duration="0:0:0.15" To="50">
                            <DoubleAnimation.EasingFunction>
                                <CubicEase EasingMode="EaseOut"/>
                            </DoubleAnimation.EasingFunction>
                        </DoubleAnimation>
                    </Storyboard>

                    <VisualState.Setters>
                        <Setter Target="NavigationViewItemMainPageList.IsEnabled" Value="False"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="32"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Frame x:Name="FrameFallbackBackground" Grid.Row="0" Grid.RowSpan="2" windows11NotPresent:Background="{ThemeResource SystemAccentColor}" Opacity="0.05" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

        <TextBlock x:Name="TextBlockNarratorStatus" Visibility="Collapsed" AutomationProperties.LiveSetting="Assertive"/>

        <!-- Titlebar -->
        <Grid Grid.Row="0" HorizontalAlignment="Left" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, ConverterParameter=1.0, FallbackValue=1.0}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="48"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition x:Name="ColumnTitlebarButtons"/>
            </Grid.ColumnDefinitions>
            
            <Image Grid.Column="0" Source="/Assets/Logo.svg" HorizontalAlignment="Center" Margin="0,8,0,8"/>
            <TextBlock Grid.Column="1" x:Uid="HeadingScanner" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
            <TextBlock Grid.Column="2" Text="-" Margin="6,0,6,0" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Visibility="{x:Bind ViewModel.TitlebarText, Mode=OneWay, Converter={StaticResource StringNotEmptyVisibilityConverter}}"/>
            <TextBlock Grid.Column="3" Text="{x:Bind ViewModel.TitlebarText, Mode=OneWay}" VerticalAlignment="Center" Style="{StaticResource CaptionTextBlockStyle}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
        </Grid>

        <!-- Content -->
        <muxc:NavigationView x:Name="NavigationViewMain" Grid.Row="1" PaneDisplayMode="LeftCompact" Style="{StaticResource NavigationViewStyleNoContent}" VerticalAlignment="Stretch" IsPaneToggleButtonVisible="False" IsPaneOpen="False" IsBackButtonVisible="Collapsed" IsSettingsVisible="True" SelectionChanged="NavigationViewMain_SelectionChanged" ItemInvoked="NavigationViewMain_ItemInvoked">
            <muxc:NavigationView.Triggers>

            </muxc:NavigationView.Triggers>

            <muxc:NavigationView.MenuItems>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainScanOptions" x:Uid="ButtonScanOptions" Foreground="{ThemeResource NavigationViewItemForeground}" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE80F;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainPageList" x:Uid="ButtonManage" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE81E;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>

                    <muxc:NavigationViewItem.RenderTransform>
                        <CompositeTransform TranslateX="0"/>
                    </muxc:NavigationViewItem.RenderTransform>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainEditor" IsEnabled="False" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE70F;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>

                    <muxc:NavigationViewItem.RenderTransform>
                        <CompositeTransform TranslateX="50"/>
                    </muxc:NavigationViewItem.RenderTransform>
                </muxc:NavigationViewItem>
            </muxc:NavigationView.MenuItems>

            <muxc:NavigationView.FooterMenuItems>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainSaveLocation" SelectsOnInvoked="False" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" FontSize="16" Glyph="{x:Bind ViewModel.IsDefaultSaveLocation, Mode=OneWay, Converter={StaticResource ScanSaveLocationGlyphConverter}}"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainHelp" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xE897;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
                <muxc:NavigationViewItem x:Name="NavigationViewItemMainDonate" SelectsOnInvoked="False" Opacity="{x:Bind ViewModel.WindowActivationState, Mode=OneWay, Converter={StaticResource WindowStateOpacityConverter}, FallbackValue=1.0}">
                    <muxc:NavigationViewItem.Icon>
                        <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xED56;" FontSize="16"/>
                    </muxc:NavigationViewItem.Icon>
                </muxc:NavigationViewItem>
            </muxc:NavigationView.FooterMenuItems>

            <Grid x:Name="GridMainContent" Padding="0,0,6,6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ColumnMainContentFirst" Width="3*" MinWidth="300" MaxWidth="350"/>
                    <ColumnDefinition x:Name="ColumnMainContentSecond" Width="7*"/>
                    <ColumnDefinition x:Name="ColumnMainContentThird" Width="3*" MinWidth="300" MaxWidth="350"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Frame x:Name="FrameMainContentFirst" Grid.Row="0" Background="{ThemeResource NavigationViewContentBackground}" CornerRadius="{ThemeResource OverlayCornerRadius}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="1">
                        <Frame.ContentTransitions>
                            <TransitionCollection>
                                <PopupThemeTransition/>
                            </TransitionCollection>
                        </Frame.ContentTransitions>
                    </Frame>
                    <muxc:InfoBar x:Name="InfoBarAppWideMessages" Style="{ThemeResource InfoBarStyleCustom}" Grid.Row="1" IsOpen="True" Title="{x:Bind ViewModel.SelectedStatusMessage.Title, Mode=OneWay}" Message="{x:Bind ViewModel.SelectedStatusMessage.MessageText, Mode=OneWay}" Severity="{x:Bind ViewModel.SelectedStatusMessage.Severity, Mode=OneWay, Converter={StaticResource AppWideMessageSeverityInfoBarConverter}}" Margin="0,6,0,0" CornerRadius="{ThemeResource OverlayCornerRadius}" Visibility="{x:Bind ViewModel.StatusMessages.Count, Mode=OneWay, Converter={StaticResource NotZeroVisibilityConverter}, FallbackValue=Collapsed}" Closing="InfoBarAppWideMessages_Closing">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Closing">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.StatusMessageDismissedCommand}"/>
                            </core:EventTriggerBehavior>
                            <core:DataTriggerBehavior Binding="{x:Bind InfoBarAppWideMessages.Visibility, Mode=OneWay}" ComparisonCondition="Equal" Value="Visible">
                                <Media:ControlStoryboardAction Storyboard="{StaticResource StoryboardInfoBarEnter}" ControlStoryboardOption="Play"/>
                            </core:DataTriggerBehavior>
                        </interactivity:Interaction.Behaviors>

                        <muxc:InfoBar.RenderTransform>
                            <CompositeTransform/>
                        </muxc:InfoBar.RenderTransform>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" MaxHeight="64"/>
                                <RowDefinition Height="58"/>
                            </Grid.RowDefinitions>

                            <ScrollViewer Grid.Row="0" Visibility="{x:Bind ViewModel.SelectedStatusMessage.AdditionalText, Mode=OneWay, Converter={StaticResource StringNotEmptyVisibilityConverter}}" VerticalScrollBarVisibility="Auto" VerticalScrollMode="Auto" Padding="0,0,12,0">
                                <TextBlock Text="{x:Bind ViewModel.SelectedStatusMessage.AdditionalText, Mode=OneWay}" Style="{StaticResource CaptionTextBlockStyle}" Foreground="{ThemeResource SystemColorGrayTextBrush}" FontFamily="Consolas" IsTextSelectionEnabled="True"/>
                            </ScrollViewer>
                            <muxc:PipsPager Grid.Row="1" NumberOfPages="{x:Bind ViewModel.StatusMessages.Count, Mode=OneWay}" SelectedPageIndex="{x:Bind ViewModel.SelectedStatusMessageIndex, Mode=TwoWay}" HorizontalAlignment="Center" VerticalAlignment="Center" MaxVisiblePips="10" PreviousButtonVisibility="Visible" NextButtonVisibility="Visible"/>
                        </Grid>
                    </muxc:InfoBar>
                </Grid>

                <Frame x:Name="FrameMainContentSecond" Grid.Column="1" Background="{ThemeResource NavigationViewContentBackground}" Margin="6,0,0,0" CornerRadius="{ThemeResource OverlayCornerRadius}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="1">
                    <Frame.ContentTransitions>
                        <TransitionCollection>
                            <PopupThemeTransition/>
                        </TransitionCollection>
                    </Frame.ContentTransitions>
                </Frame>
                <Frame x:Name="FrameMainContentThird" Grid.Column="2" Background="{ThemeResource NavigationViewContentBackground}" Margin="6,0,0,0" CornerRadius="{ThemeResource OverlayCornerRadius}" BorderBrush="{ThemeResource NavigationViewContentGridBorderBrush}" BorderThickness="1"/>
            </Grid>
            
            <!-- Debug Flyout -->
            <FlyoutBase.AttachedFlyout>
                <Flyout Placement="Left">
                    <StackPanel Orientation="Vertical" MaxWidth="400">
                        <StackPanel Orientation="Horizontal" Margin="0,0,0,16">
                            <FontIcon Style="{StaticResource FontIconStyleSegoeFluentIcons}" Glyph="&#xEBE8;" FontSize="16" HorizontalAlignment="Left" Margin="0,0,12,0"/>
                            <TextBlock Text="Debug status messages" Style="{StaticResource BaseTextBlockStyle}"/>
                        </StackPanel>

                        <TextBox Text="{x:Bind ViewModel.DebugStatusMessage.Title, Mode=TwoWay}" PlaceholderText="Title" Margin="0,0,0,6" Width="300"/>
                        <TextBox Text="{x:Bind ViewModel.DebugStatusMessage.MessageText, Mode=TwoWay}" PlaceholderText="Message text" AcceptsReturn="True" Margin="0,0,0,6" Width="300"/>
                        <TextBox Text="{x:Bind ViewModel.DebugStatusMessage.AdditionalText, Mode=TwoWay}" PlaceholderText="Additional text" AcceptsReturn="True" Margin="0,0,0,6" Width="300"/>
                        <ComboBox ItemsSource="{x:Bind ViewModel.DebugStatusMessageSeverities, Mode=OneWay}" SelectedItem="{x:Bind ViewModel.DebugStatusMessage.Severity, Mode=TwoWay}" MinWidth="150"/>

                        <StackPanel Orientation="Horizontal" BorderBrush="{ThemeResource ExpanderContentBorderBrush}" BorderThickness="0,1,0,0" Margin="0,12,0,0" Padding="0,12,0,0">
                            <Button Content="Broadcast status message" Command="{x:Bind ViewModel.DebugBroadcastStatusMessageCommand}" Style="{StaticResource AccentButtonStyle}"/>
                        </StackPanel>
                    </StackPanel>
                </Flyout>
            </FlyoutBase.AttachedFlyout>
        </muxc:NavigationView>
    </Grid>
</Page>
